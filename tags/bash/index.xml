<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bash on Le Baron de Charlus</title><link>https://lebaron.sh/tags/bash/</link><description>Recent content in Bash on Le Baron de Charlus</description><generator>Hugo</generator><language>en-us</language><copyright>Le Baron de Charlus</copyright><lastBuildDate>Sat, 25 Jun 2022 18:03:17 +0200</lastBuildDate><atom:link href="https://lebaron.sh/tags/bash/index.xml" rel="self" type="application/rss+xml"/><item><title>Shloader - A Modern Shell Loader</title><link>https://lebaron.sh/p/shloader-a-modern-shell-loader/</link><pubDate>Sat, 25 Jun 2022 18:03:17 +0200</pubDate><guid>https://lebaron.sh/p/shloader-a-modern-shell-loader/</guid><description>&lt;p>&lt;img src="https://lebaron.sh/images/shloader.png" alt="Shloader">&lt;/p>
&lt;ol>
&lt;li>&lt;a href="#why">Why&lt;/a>&lt;/li>
&lt;li>&lt;a href="#features">Features&lt;/a>&lt;/li>
&lt;li>&lt;a href="#preview">Preview&lt;/a>&lt;/li>
&lt;li>&lt;a href="#templating">Templating&lt;/a>&lt;/li>
&lt;li>&lt;a href="#usage">Usage&lt;/a>&lt;/li>
&lt;li>&lt;a href="#parsing-arguments">Parsing Arguments&lt;/a>&lt;/li>
&lt;li>&lt;a href="#shell-configurations">Shell Configurations&lt;/a>&lt;/li>
&lt;li>&lt;a href="#trap-error-and-exit">Trap Error and Exit&lt;/a>&lt;/li>
&lt;li>&lt;a href="#display-loader">Display Loader&lt;/a>&lt;/li>
&lt;li>&lt;a href="#call-loader">Call Loader&lt;/a>&lt;/li>
&lt;li>&lt;a href="#script-library-integration">Scrip Library Integration&lt;/a>&lt;/li>
&lt;li>&lt;a href="#conclusion">Conclusion&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1 id="why">Why&lt;/h1>
&lt;p>I&amp;rsquo;ve been recently doing some old shell scripts to quickly automatize and distribute actions that were made manually, I&amp;rsquo;ll write a post on it later. For now I&amp;rsquo;d like to share with you how I&amp;rsquo;ve been coding a 100% shell loader library to use it in my scripts.&lt;/p></description></item><item><title>Online servers availability</title><link>https://lebaron.sh/p/online-servers-availability/</link><pubDate>Tue, 01 Aug 2017 09:40:07 +0000</pubDate><guid>https://lebaron.sh/p/online-servers-availability/</guid><description>&lt;p>We need servers at Online, but there is no availability!
So they came to ask me if I didn&amp;rsquo;t have a magic solution&amp;hellip;&lt;/p>
&lt;p>A little &lt;code>bash&lt;/code>&amp;hellip; a &lt;code>notify&lt;/code> in this case &lt;code>Slack&lt;/code> and here we go!&lt;br>
As usual &lt;a href="https://github.com/lebarondecharlus/OnlineSrvDispo">sources are available&lt;/a>.&lt;/p>
&lt;h4 id="dirty-way">Dirty way&lt;/h4>
&lt;p>*To be alerted via slack you have to create an &lt;a href="https://my.slack.com/services/new/incoming-webhook/">incoming-webhook&lt;/a> which will generate a link.&lt;/p>
&lt;p>For an XC 2016 series server:&lt;/p>
&lt;pre>&lt;code>text=&amp;quot;DISPO : https://www.online.net/fr/serveur-dedie/dedibox-xc&amp;quot;; json=&amp;quot;{\&amp;quot;channel\&amp;quot;: \&amp;quot;#infra\&amp;quot;, \&amp;quot;text\&amp;quot;: \&amp;quot;$text\&amp;quot;}&amp;quot; ; while true ; do curl --silent https://www.online.net/fr/serveur-dedie | grep '&amp;lt;button class=&amp;quot;btn btn--primary js-order-dedibox&amp;quot;' | grep -i 'xc 2016' | grep -i 'victime' || curl -s -d &amp;quot;payload=$json&amp;quot; &amp;quot;https://hooks.slack.com/services/XXX/XXXX/XXXX/XXXX&amp;quot; ; sleep 5 ; done 
&lt;/code>&lt;/pre>
&lt;p>Curl will be done only if one server is available.&lt;/p></description></item></channel></rss>