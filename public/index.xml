<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Le Baron de Charlus</title><link>https://lebaron.sh/</link><description>Recent content on Le Baron de Charlus</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Le Baron de Charlus</copyright><lastBuildDate>Wed, 09 Aug 2023 13:10:42 +0200</lastBuildDate><atom:link href="https://lebaron.sh/index.xml" rel="self" type="application/rss+xml"/><item><title>B, an ugly Bitwarden CLI</title><link>https://lebaron.sh/p/b-an-ugly-bitwarden-cli/</link><pubDate>Wed, 09 Aug 2023 13:10:42 +0200</pubDate><guid>https://lebaron.sh/p/b-an-ugly-bitwarden-cli/</guid><description>&lt;br>
&lt;p align="center">
&lt;img src="https://lebaron.sh/images/b.png" width="30%">
&lt;/p>
&lt;p>Yes, yes, yes, I know… I don&amp;rsquo;t like graphical interfaces so sometimes I like to make some TUI tools, and sometimes they can be ugly too…&lt;/p>
&lt;p>I was tired of wasting time clicking each time on the web extension or on the client, of having to systematically enter my login details, of not having a quick access directly accessible in shortcuts, etc.&lt;/p>
&lt;p>So, living in a terminal 90% of the time, I thought I&amp;rsquo;d do a quick script to put me out of my misery.&lt;/p>
&lt;p>I know, judge me, please yourself :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># […]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bw list items --search &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">1&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> --session &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">BW_SESSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> jq -j &lt;span class="s1">&amp;#39;.[] | [.name, .login.password]&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> tr -d &lt;span class="s1">&amp;#39;\n[&amp;#34;&amp;#39;&lt;/span>&lt;span class="p">|&lt;/span> tr &lt;span class="s1">&amp;#39;]&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;\n&amp;#39;&lt;/span>&lt;span class="p">|&lt;/span> tr &lt;span class="s1">&amp;#39;,&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;:&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> sed &lt;span class="s1">&amp;#39;s/^\ \ //g&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">FZF&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> --layout&lt;span class="o">=&lt;/span>reverse &lt;span class="p">|&lt;/span> tail -1 &lt;span class="p">|&lt;/span> tr -d &lt;span class="s1">&amp;#39;&amp;#34;&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> cut -d &lt;span class="s1">&amp;#39;:&amp;#39;&lt;/span> -f &lt;span class="m">2&lt;/span> &lt;span class="p">|&lt;/span> sed &lt;span class="s1">&amp;#39;s/^\ \ //g&amp;#39;&lt;/span>&lt;span class="p">|&lt;/span> cat &lt;span class="p">|&lt;/span> xclip -se c &amp;gt; /dev/null 2&amp;gt; /dev/null
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># […]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>I needed Bitwarden CLI tool &lt;code>bw&lt;/code>, a way to copy in clipboard password &lt;code>xclip&lt;/code>, some json parsing with &lt;code>jq&lt;/code> and &lt;code>fzf&lt;/code> (and &lt;code>fzf-tmux&lt;/code>).&lt;/p>
&lt;p>So dependencies are :&lt;/p>
&lt;ul>
&lt;li>&lt;code>bw&lt;/code> (Bitwarden cli)&lt;/li>
&lt;li>&lt;code>xclip&lt;/code>&lt;/li>
&lt;li>&lt;code>jq&lt;/code>&lt;/li>
&lt;li>&lt;code>fzf&lt;/code>&lt;/li>
&lt;li>&lt;code>fzf-tmux&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>To install this quick and dirty script, you need to create a Bitwarden token, &lt;a class="link" href="https://bitwarden.com/help/personal-api-key/" target="_blank" rel="noopener"
>check documentation here&lt;/a>.
Then set variables in b script.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Fill these vars&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">BW_CLIENTID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">BW_CLIENTSECRET&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">BW_PASSWORD&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Finally move &lt;code>b&lt;/code> file to &lt;code>/usr/local/bin&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">sudo mv b /usr/local/bin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You can then :&lt;/p>
&lt;ul>
&lt;li>Search for a password&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ex, search github password&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">b github
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>Sync vault (download new password from Bitwarden/Vaultwarden server):&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">b --sync
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>And probably a lot more to come as I could be a lazy man.&lt;/p>
&lt;p>Full script :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">BW_CLIENTID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">BW_CLIENTSECRET&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">BW_PASSWORD&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">LOCK&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$HOME&lt;/span>&lt;span class="s2">/.bw.lock&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># is unlock ?&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="nb">test&lt;/span> -f &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">LOCK&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">BW_SESSION&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>bw unlock --passwordenv BW_PASSWORD &lt;span class="p">|&lt;/span> grep &lt;span class="nb">export&lt;/span> &lt;span class="p">|&lt;/span> cut -d &lt;span class="s1">&amp;#39;&amp;#34;&amp;#39;&lt;/span> -f &lt;span class="m">2&lt;/span> &lt;span class="p">|&lt;/span> tr -d &lt;span class="s1">&amp;#39;&amp;#34;&amp;#39;&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> bw sync&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> bw login --apikey &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> touch &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">LOCK&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># is inside tmux ?&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -z &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">TMUX&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">FZF&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;fzf&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">FZF&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;fzf-tmux&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">1&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;--sync&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> bw sync
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">exit&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bw list items --search &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">1&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> --session &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">BW_SESSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> jq -j &lt;span class="s1">&amp;#39;.[] | [.name, .login.password]&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> tr -d &lt;span class="s1">&amp;#39;\n[&amp;#34;&amp;#39;&lt;/span>&lt;span class="p">|&lt;/span> tr &lt;span class="s1">&amp;#39;]&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;\n&amp;#39;&lt;/span>&lt;span class="p">|&lt;/span> tr &lt;span class="s1">&amp;#39;,&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;:&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> sed &lt;span class="s1">&amp;#39;s/^\ \ //g&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">FZF&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> --layout&lt;span class="o">=&lt;/span>reverse &lt;span class="p">|&lt;/span> tail -1 &lt;span class="p">|&lt;/span> tr -d &lt;span class="s1">&amp;#39;&amp;#34;&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> cut -d &lt;span class="s1">&amp;#39;:&amp;#39;&lt;/span> -f &lt;span class="m">2&lt;/span> &lt;span class="p">|&lt;/span> sed &lt;span class="s1">&amp;#39;s/^\ \ //g&amp;#39;&lt;/span>&lt;span class="p">|&lt;/span> cat &lt;span class="p">|&lt;/span> xclip -se c &amp;gt; /dev/null 2&amp;gt; /dev/null
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;a href="https://github.com/lebarondecharlus/b" target="_blank">Sources are here.&lt;/a>&lt;/p></description></item><item><title>Manage your Zellij sessions</title><link>https://lebaron.sh/p/manage-your-zellij-sessions/</link><pubDate>Tue, 12 Jul 2022 12:22:42 +0200</pubDate><guid>https://lebaron.sh/p/manage-your-zellij-sessions/</guid><description>&lt;img src="https://lebaron.sh/images/zellij.png" width="50%">
&lt;p>Quick post on great &lt;code>Zellij&lt;/code> tool I&amp;rsquo;ve been using for some weeks now in &lt;code>Tmux&lt;/code> replacement.&lt;/p>
&lt;p>I&amp;rsquo;ve been missing to manage my &lt;code>sessions&lt;/code> on multiplexer init while starting a new &lt;code>shell&lt;/code> or &lt;code>terminal&lt;/code> so I&amp;rsquo;ve ended creating a quick feature to manage it on startup.&lt;/p>
&lt;h3 id="dependencies">Dependencies
&lt;/h3>&lt;p>You need &lt;a href="https://github.com/lotabout/skim" target="_blank">sk&lt;/a> binary installed and in your &lt;code>$PATH&lt;/code> and of course &lt;a href="https://github.com/zellij-org/zellij/" target="_blank">zellij&lt;/a>.&lt;/p>
&lt;h3 id="demo">Demo
&lt;/h3>&lt;p>&lt;img src="https://lebaron.sh/images/sessions.gif"
loading="lazy"
alt="Zellij Sessions"
>&lt;/p>
&lt;h3 id="installation">Installation
&lt;/h3>&lt;p>Add this block at the end of your &lt;code>$SHELLrc&lt;/code> file &lt;i>(tested with BASH and ZSH)&lt;/i> :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">ZJ_SESSIONS&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>zellij list-sessions&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">NO_SESSIONS&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">ZJ_SESSIONS&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> wc -l&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="s2">&amp;#34;{&lt;/span>&lt;span class="nv">$ZELLIJ&lt;/span>&lt;span class="s2">}&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="o">[&lt;/span> -z &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">ZELLIJ_SESSION_NAME&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> -ne &lt;span class="s2">&amp;#34;Active Zellij sessions :\n&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> i in &lt;span class="k">$(&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">ZJ_SESSIONS&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="nb">echo&lt;/span> -ne &lt;span class="s2">&amp;#34;*&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">i&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">\n&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> -ne &lt;span class="s1">&amp;#39;\n&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">read&lt;/span> REPLY&lt;span class="se">\?&lt;/span>&lt;span class="s2">&amp;#34;New zellij session [y/n] ? &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">REPLY&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;y&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">read&lt;/span> SESS&lt;span class="se">\?&lt;/span>&lt;span class="s2">&amp;#34;Session name : &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> zellij --layout compact attach -c &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">SESS&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">NO_SESSIONS&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -ge &lt;span class="m">1&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> zellij --layout compact attach &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">ZJ_SESSIONS&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> sk&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="contributing">Contributing
&lt;/h3>&lt;p>Feel free to fork and contribute.&lt;/p>
&lt;p>&lt;a href="https://github.com/lebarondecharlus/zellij-sessions" target="_blank">Sources are here.&lt;/a>&lt;/p></description></item><item><title>Shloader - A Modern Shell Loader</title><link>https://lebaron.sh/p/shloader-a-modern-shell-loader/</link><pubDate>Sat, 25 Jun 2022 18:03:17 +0200</pubDate><guid>https://lebaron.sh/p/shloader-a-modern-shell-loader/</guid><description>&lt;p>&lt;img src="https://lebaron.sh/images/shloader.png"
loading="lazy"
alt="Shloader"
>&lt;/p>
&lt;ol>
&lt;li>&lt;a class="link" href="#why" >Why&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#features" >Features&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#preview" >Preview&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#templating" >Templating&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#usage" >Usage&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#parsing-arguments" >Parsing Arguments&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#shell-configurations" >Shell Configurations&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#trap-error-and-exit" >Trap Error and Exit&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#display-loader" >Display Loader&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#call-loader" >Call Loader&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#script-library-integration" >Scrip Library Integration&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#conclusion" >Conclusion&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1 id="why">Why
&lt;/h1>&lt;p>I&amp;rsquo;ve been recently doing some old shell scripts to quickly automatize and distribute actions that were made manually, I&amp;rsquo;ll write a post on it later. For now I&amp;rsquo;d like to share with you how I&amp;rsquo;ve been coding a 100% shell loader library to use it in my scripts.&lt;/p>
&lt;p>I&amp;rsquo;ve been looking on the net for existing library, I&amp;rsquo;ve found some interesting Github projects but it doesn&amp;rsquo;t appear to be &amp;ldquo;library&amp;rdquo; ready. Furthermore, it was mostly old basic ASCII templates and I wanted to give a try to modern loaders and spinners on shell.&lt;/p>
&lt;p>So I ended create &lt;a class="link" href="https://github.com/lebaronlebaron.shloader" target="_blank" rel="noopener"
>&lt;code>shloader&lt;/code>&lt;/a>.&lt;/p>
&lt;h1 id="features">Features
&lt;/h1>&lt;p>shloader has nice features such as :&lt;/p>
&lt;p>😍 emoji support&lt;/p>
&lt;p>💪 loader support&lt;/p>
&lt;p>😎 dynamic message on load step&lt;/p>
&lt;p>ℹ️ message on step ending&lt;/p>
&lt;p>🎨 multiple loading templates&lt;/p>
&lt;p>👌 light and easy to use on existing scripts&lt;/p>
&lt;h1 id="preview">Preview
&lt;/h1>&lt;p>&lt;img src="https://lebaron.sh/images/shloader.gif"
loading="lazy"
alt="Shloader"
>&lt;/p>
&lt;h1 id="templating">Templating
&lt;/h1>&lt;p>First of all, we need to create templates, one for each loaders that will be displayed. I&amp;rsquo;ve decided to use shell &lt;code>array&lt;/code> so we can work on iteration later on customs functions.&lt;/p>
&lt;p>So I ended with something like :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># EMOJIS&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">emoji_hour&lt;/span>&lt;span class="o">=(&lt;/span> 0.08 &lt;span class="s1">&amp;#39;🕛&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;🕐&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;🕑&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;🕒&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;🕓&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;🕔&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;🕕&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;🕖&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;🕗&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;🕘&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;🕙&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;🕚&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">emoji_face&lt;/span>&lt;span class="o">=(&lt;/span> 0.08 &lt;span class="s1">&amp;#39;😐&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;😀&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;😍&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;🙄&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;😒&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;😨&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;😡&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">emoji_earth&lt;/span>&lt;span class="o">=(&lt;/span> 0.1 🌍 🌎 🌏 &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">emoji_moon&lt;/span>&lt;span class="o">=(&lt;/span> 0.08 🌑 🌒 🌓 🌔 🌕 🌖 🌗 🌘 &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">emoji_orange_pulse&lt;/span>&lt;span class="o">=(&lt;/span> 0.1 🔸 🔶 🟠 🟠 🔶 &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">emoji_blue_pulse&lt;/span>&lt;span class="o">=(&lt;/span> 0.1 🔹 🔷 🔵 🔵 🔷 &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">emoji_blink&lt;/span>&lt;span class="o">=(&lt;/span> 0.06 😐 😐 😐 😐 😐 😐 😐 😐 😐 😑 &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">emoji_camera&lt;/span>&lt;span class="o">=(&lt;/span> 0.05 📷 📷 📷 📷 📷 📷 📷 📷 📷 📷 📷 📷 📷 📷 📷 📷 📷 📷 📷 📷 📸 📷 📸 &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">emoji_sick&lt;/span>&lt;span class="o">=(&lt;/span> 0.2 🤢 🤢 🤮 &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">emoji_monkey&lt;/span>&lt;span class="o">=(&lt;/span> 0.2 🙉 🙈 🙊 🙈 &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">emoji_bomb&lt;/span>&lt;span class="o">=(&lt;/span> 0.2 &lt;span class="s1">&amp;#39;💣 &amp;#39;&lt;/span> &lt;span class="s1">&amp;#39; 💣 &amp;#39;&lt;/span> &lt;span class="s1">&amp;#39; 💣 &amp;#39;&lt;/span> &lt;span class="s1">&amp;#39; 💣&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39; 💣&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39; 💣&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39; 💣&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39; 💣&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39; 💥&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39; &amp;#39;&lt;/span> &lt;span class="s1">&amp;#39; &amp;#39;&lt;/span> &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ASCII&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">ball&lt;/span>&lt;span class="o">=(&lt;/span> 0.2 &lt;span class="s1">&amp;#39;(●)&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;(⚬)&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">arrow&lt;/span>&lt;span class="o">=(&lt;/span> 0.06 &lt;span class="s1">&amp;#39;↑&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;↗&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;→&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;↘&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;↓&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;↙&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;←&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;↖&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">cym&lt;/span>&lt;span class="o">=(&lt;/span> 0.1 &lt;span class="s1">&amp;#39;⊏&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⊓&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⊐&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⊔&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">x_plus&lt;/span>&lt;span class="o">=(&lt;/span> 0.08 &lt;span class="s1">&amp;#39;×&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;+&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">line&lt;/span>&lt;span class="o">=(&lt;/span> 0.08 &lt;span class="s1">&amp;#39;☰&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;☱&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;☳&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;☷&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;☶&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;☴&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">ball_wave&lt;/span>&lt;span class="o">=(&lt;/span> 0.1 &lt;span class="s1">&amp;#39;𓃉𓃉𓃉&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;𓃉𓃉∘&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;𓃉∘°&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;∘°∘&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;°∘𓃉&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;∘𓃉𓃉&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">old&lt;/span>&lt;span class="o">=(&lt;/span> 0.07 &lt;span class="s1">&amp;#39;—&amp;#39;&lt;/span> &lt;span class="s2">&amp;#34;\\&amp;#34;&lt;/span> &lt;span class="s1">&amp;#39;|&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span> &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">dots&lt;/span>&lt;span class="o">=(&lt;/span> 0.04 &lt;span class="s1">&amp;#39;⣾&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⣽&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⣻&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⢿&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⡿&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⣟&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⣯&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⣷&amp;#39;&lt;/span> &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">dots2&lt;/span>&lt;span class="o">=(&lt;/span> 0.04 &lt;span class="s1">&amp;#39;⠋&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠙&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠹&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠸&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠼&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠴&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠦&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠧&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠇&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠏&amp;#39;&lt;/span> &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">dots3&lt;/span>&lt;span class="o">=(&lt;/span> 0.04 &lt;span class="s1">&amp;#39;⠋&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠙&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠚&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠞&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠖&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠦&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠴&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠲&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠳&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠓&amp;#39;&lt;/span> &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">dots4&lt;/span>&lt;span class="o">=(&lt;/span> 0.04 &lt;span class="s1">&amp;#39;⠄&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠆&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠇&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠋&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠙&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠸&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠰&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠠&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠰&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠸&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠙&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠋&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠇&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠆&amp;#39;&lt;/span> &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">dots5&lt;/span>&lt;span class="o">=(&lt;/span> 0.04 &lt;span class="s1">&amp;#39;⠋&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠙&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠚&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠒&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠂&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠂&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠒&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠲&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠴&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠦&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠖&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠒&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠐&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠐&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠒&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠓&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠋&amp;#39;&lt;/span> &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">dots6&lt;/span>&lt;span class="o">=(&lt;/span> 0.04 &lt;span class="s1">&amp;#39;⠁&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠉&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠙&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠚&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠒&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠂&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠂&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠒&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠲&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠴&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠤&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠄&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠄&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠤&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠴&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠲&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠒&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠂&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠂&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠒&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠚&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠙&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠉&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠁&amp;#39;&lt;/span> &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">dots7&lt;/span>&lt;span class="o">=(&lt;/span> 0.04 &lt;span class="s1">&amp;#39;⠈&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠉&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠋&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠓&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠒&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠐&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠐&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠒&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠖&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠦&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠤&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠠&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠠&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠤&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠦&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠖&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠒&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠐&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠐&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠒&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠓&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠋&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠉&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠈&amp;#39;&lt;/span> &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">dots8&lt;/span>&lt;span class="o">=(&lt;/span> 0.04 &lt;span class="s1">&amp;#39;⠁&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠁&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠉&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠙&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠚&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠒&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠂&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠂&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠒&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠲&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠴&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠤&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠄&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠄&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠤&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠠&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠠&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠤&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠦&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠖&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠒&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠐&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠐&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠒&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠓&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠋&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠉&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠈&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠈&amp;#39;&lt;/span> &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">dots9&lt;/span>&lt;span class="o">=(&lt;/span> 0.04 &lt;span class="s1">&amp;#39;⢹&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⢺&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⢼&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⣸&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⣇&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⡧&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⡗&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⡏&amp;#39;&lt;/span> &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">dots10&lt;/span>&lt;span class="o">=(&lt;/span> 0.04 &lt;span class="s1">&amp;#39;⢄&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⢂&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⢁&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⡁&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⡈&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⡐&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⡠&amp;#39;&lt;/span> &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">dots11&lt;/span>&lt;span class="o">=(&lt;/span> 0.04 &lt;span class="s1">&amp;#39;⠁&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠂&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠄&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⡀&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⢀&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠠&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠐&amp;#39;&lt;/span> &lt;span class="s1">&amp;#39;⠈&amp;#39;&lt;/span> &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Array composition is divided in two parts, the first one is a &lt;code>time&lt;/code> interval in seconds and the second one is the loader frame transition.&lt;/p>
&lt;h1 id="usage">Usage
&lt;/h1>&lt;p>I wanted library to be used as commands can be, by passing argument through options.&lt;/p>
&lt;p>First, let&amp;rsquo;s work on default &lt;code>usage&lt;/code> function to display to user.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">usage&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> cat &lt;span class="s">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">Available options:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">-h, --help &amp;lt;OPTIONAL&amp;gt; Print this help and exit
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">-l, --loader &amp;lt;OPTIONAL&amp;gt; Chose loader to display
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">-m, --message &amp;lt;OPTIONAL&amp;gt; Text to display while loading
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">-e, --ending &amp;lt;OPTIONAL&amp;gt; Text to display when finishing
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">exit&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>I wanted to define argument options as bellow :&lt;/p>
&lt;h4 id="display-help">Display help
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># e.g&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">shloader -h
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Parameter&lt;/th>
&lt;th style="text-align: left">Type&lt;/th>
&lt;th style="text-align: left">Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">&lt;code>-h --help&lt;/code>&lt;/td>
&lt;td style="text-align: left">&lt;code>none&lt;/code>&lt;/td>
&lt;td style="text-align: left">Optional. Show help usage&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="chose-loader">Chose loader
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># e.g&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">shloader -l arrow
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Parameter&lt;/th>
&lt;th style="text-align: left">Type&lt;/th>
&lt;th style="text-align: left">Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">&lt;code>-l --loader&lt;/code>&lt;/td>
&lt;td style="text-align: left">&lt;code>string&lt;/code>&lt;/td>
&lt;td style="text-align: left">Optional. Chose loader template&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="display-info-on-loading">Display info on loading
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># e.g&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">shloader -m &lt;span class="s2">&amp;#34;my loading message&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Parameter&lt;/th>
&lt;th style="text-align: left">Type&lt;/th>
&lt;th style="text-align: left">Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">&lt;code>-m --message&lt;/code>&lt;/td>
&lt;td style="text-align: left">&lt;code>string&lt;/code>&lt;/td>
&lt;td style="text-align: left">Optional. Show a text message while displaying loader&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="display-info-on-ending">Display info on ending
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># e.g&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">shloader -e &lt;span class="s2">&amp;#34;\u2728 all done&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Parameter&lt;/th>
&lt;th style="text-align: left">Type&lt;/th>
&lt;th style="text-align: left">Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">&lt;code>-e --end&lt;/code>&lt;/td>
&lt;td style="text-align: left">&lt;code>string&lt;/code>&lt;/td>
&lt;td style="text-align: left">Optional. Show an end text message when loader ends&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="parsing-arguments">Parsing Arguments
&lt;/h1>&lt;p>In order to work on user input, it is necessary to read option content so we can modular library execution.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">shloader&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">loader&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">message&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">ending&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> :&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">1&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> in
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -h &lt;span class="p">|&lt;/span> --help&lt;span class="o">)&lt;/span> usage&lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -l &lt;span class="p">|&lt;/span> --loader&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">loader&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">2&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">shift&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -m &lt;span class="p">|&lt;/span> --message&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">message&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">2&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">shift&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -e &lt;span class="p">|&lt;/span> --ending&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">ending&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">2&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">shift&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> -?*&lt;span class="o">)&lt;/span> die &lt;span class="s2">&amp;#34;Unknown option: &lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> *&lt;span class="o">)&lt;/span> &lt;span class="nb">break&lt;/span> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">esac&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">shift&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>…&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You might notice I&amp;rsquo;ve placed it directly in the main &lt;code>function&lt;/code> so it will be the first element to be run.&lt;/p>
&lt;p>If user don&amp;rsquo;t specify loader, we should display one as default, let&amp;rsquo;s say &lt;code>dots&lt;/code> one.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># shloader func&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>…&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> -z &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">loader&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">loader&lt;/span>&lt;span class="o">=&lt;/span>dots&lt;span class="o">[&lt;/span>@&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">loader&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$loader&lt;/span>&lt;span class="o">[&lt;/span>@&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>…&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>One last thing here, I use a little custom &lt;code>die&lt;/code> function to exit properly if option is unknown.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">die&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">local&lt;/span> &lt;span class="nv">code&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">2&lt;/span>&lt;span class="p">-1&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">exit&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$code&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="shell-configurations">Shell Configurations
&lt;/h1>&lt;p>We will make some quick configuration on the top header script under &lt;code>shebang&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="c1"># https://github.com/lebaronlebaron.shloader&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># me@lebaron.sh&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">set&lt;/span> -Eeuo pipefail
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">trap&lt;/span> end_shloader SIGINT SIGTERM ERR EXIT RETURN
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tput civis
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>First, &lt;code>set -Eeuo pipefail&lt;/code> so we can exit execution if one of the commands in the pipe fails.&lt;/p>
&lt;p>Then, &lt;code>trap end_shloader SIGINT SIGTERM ERR EXIT RETURN&lt;/code> so we can call a custom function to clean our execution on exiting, stopping, errors…&lt;/p>
&lt;p>Finaly, &lt;code>tput civis&lt;/code> is used to hide cursor.&lt;/p>
&lt;h1 id="trap-error-and-exit">Trap Error and Exit
&lt;/h1>&lt;p>Trap will call a custom function, but how does it work ?&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">end_shloader&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">kill&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">shloader_pid&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">&amp;amp;&lt;/span>&amp;gt;/dev/null
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> tput cnorm
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">ending&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">printf&lt;/span> &lt;span class="s2">&amp;#34;\r&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">ending&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">echo&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Right here I ensure first to kill loader&amp;rsquo;s &lt;code>PID&lt;/code> and restore cursor thanks to &lt;code>tput cnorm&lt;/code>.&lt;/p>
&lt;h1 id="display-loader">Display Loader
&lt;/h1>&lt;p>Now we can interact with shell output to generate loading animations.&lt;/p>
&lt;p>Let&amp;rsquo;s create a new function &lt;code>play_shloader()&lt;/code> :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">play_shloader&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="nb">true&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> frame in &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">loader&lt;/span>&lt;span class="p">[@]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">printf&lt;/span> &lt;span class="s2">&amp;#34;\r%s&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">frame&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">message&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sleep &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">speed&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Here we assume we have &lt;code>loader&lt;/code> array we can display during time duration defined in &lt;code>speed&lt;/code> variable (we will see it after).&lt;/p>
&lt;h1 id="call-loader">Call Loader
&lt;/h1>&lt;p>What about now ? We have all bricks to make great loaders, let&amp;rsquo;s put them in work together !&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># shloader function&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>…&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">loader&lt;/span>&lt;span class="o">=(&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="p">!loader&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">speed&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">loader&lt;/span>&lt;span class="p">[0]&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">unset&lt;/span> &lt;span class="s2">&amp;#34;loader[0]&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> tput civis
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> play_shloader &lt;span class="p">&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">shloader_pid&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="p">!&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>…&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>What is done here ?&lt;/p>
&lt;p>We first print &lt;code>loader&lt;/code> array content we save in &lt;code>loader&lt;/code> variable. We know first element in array is time duration, so we save it in &lt;code>speed&lt;/code> variable.&lt;/p>
&lt;p>Now we have split array, we can remove time duration as it is now under &lt;code>speed&lt;/code> variable.
We then hide cursor, call our &lt;code>play_shloader&lt;/code> function and save &lt;code>PID&lt;/code>.&lt;/p>
&lt;p>You can find the &lt;a class="link" href="https://github.com/lebaronlebaron.shloader/blob/main/lib/shloader.sh" target="_blank" rel="noopener"
>Full Library Code&lt;/a>&lt;/p>
&lt;h1 id="script-library-integration">Script Library Integration
&lt;/h1>&lt;p>Nothing hard here !&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> ./lib/shloader.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">shloader -l emoji_hour -m &lt;span class="s2">&amp;#34;Testing&amp;#34;&lt;/span> -e &lt;span class="s2">&amp;#34;✨ All good !&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sleep &lt;span class="m">2&lt;/span> &lt;span class="c1"># remove it in your code&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># … your logic goes here&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">end_shloader
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>With more details :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">!/bin/bash
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># if you want to try just add this block code in your code &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">source&lt;/span> ./lib/shloader.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># you can chose (see more in lib/loader.sh):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ball, arrow, cym, x_plus, line, ball_wave, npm and old.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># you can specify message to display during loading&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># and message to display after your code finished&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># eg with npm style&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># notice end message -e use unicode emoji to display&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># this is for better terminal support&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># \u2728 == ✨ but you can use emoji if your settings support it !&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">shloader -l emoji_face -m &lt;span class="s2">&amp;#34;Testing&amp;#34;&lt;/span> -e &lt;span class="s2">&amp;#34;\u2728 All good !&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sleep &lt;span class="m">2&lt;/span> &lt;span class="c1"># remove it in your code&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># … your logic goes here&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># if you want to hide some output from loader&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># don&amp;#39;t forget to redirect your STD*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># eg :&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># STDOUT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># my_cmd 1&amp;gt; /dev/null&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># STDERR&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># my_cmd 2&amp;gt; /dev/null&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># BOTH&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># my_cmd &amp;amp;&amp;gt; /dev/null&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># stop loader&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">end_shloader
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="conclusion">Conclusion
&lt;/h1>&lt;p>As all things useless… it may become mandatory 😂.&lt;/p></description></item><item><title>Ultimate Python development environment configuration</title><link>https://lebaron.sh/p/ultimate-python-development-environment-configuration/</link><pubDate>Fri, 10 Jun 2022 08:12:12 +0200</pubDate><guid>https://lebaron.sh/p/ultimate-python-development-environment-configuration/</guid><description>&lt;p>&lt;img src="https://lebaron.sh/images/ultimate-python.png"
loading="lazy"
alt="Ultimate Python"
>&lt;/p>
&lt;ol>
&lt;li>&lt;a class="link" href="#the-old-way" >The Old Way&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#direnv" >Direnv&lt;/a>
&lt;ul>
&lt;li>&lt;a class="link" href="#what-is-direnv-and-how-it-works" >What is direnv and how it works&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#direnv-installation" >direnv installation&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#shell-configuration" >Shell configuration&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#how-python-works-with-direnv" >How Python works with direnv&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a class="link" href="#pyenv" >Pyenv&lt;/a>
&lt;ul>
&lt;li>&lt;a class="link" href="#installation-and-configuration" >Installation and Configuration&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#use-pyenv-with-direnv" >Use pyenv with direnv&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a class="link" href="#poetry" >Poetry&lt;/a>
&lt;ul>
&lt;li>&lt;a class="link" href="#what-is-poetry" >What is Poetry&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#poetry-installation" >Poetry installation&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#poetry-shell-configuration" >Shell configuration&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#new-project" >New project&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#existing-project" >Existing project&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#poetry-usage" >Poetry usage&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#link-poetry-with-direnv" >Link Poetry with direnv&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a class="link" href="#gpg" >GPG&lt;/a>
&lt;ul>
&lt;li>&lt;a class="link" href="#generate-a-key" >Generate a key&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#get-key-id" >Get key ID&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a class="link" href="#pass" >Pass&lt;/a>
&lt;ul>
&lt;li>&lt;a class="link" href="#pass-installation" >Pass installation&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#pass-usage" >Pass usage&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a class="link" href="#tomb" >Tomb&lt;/a>
&lt;ul>
&lt;li>&lt;a class="link" href="#tomb-installation" >Tomb installation&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#tomb-usage" >Tomb usage&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a class="link" href="#secrets-with-direnv-and-pass" >Secrets with Direnv and Pass&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#direnv-advanced-configurations" >Direnv advanced configurations&lt;/a>
&lt;ul>
&lt;li>&lt;a class="link" href="#check-for-commands-dependencies" >Check for commands dependencies&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#third-party-binaries" >Third-party binaries&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#third-party-configs" >Third-party configs&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a class="link" href="#final-template" >Final template&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="#conclusion" >Conclusion&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>Disclaimer: I&amp;rsquo;m not saying &lt;code>virtualenv&lt;/code> methods are bad.&lt;/p>
&lt;h1 id="the-old-way">The Old way
&lt;/h1>&lt;p>For years now, I&amp;rsquo;ve been using Python for a lot of different projects. My setup environment was quite simple, use &lt;code>virtualenv&lt;/code> and work locally.&lt;/p>
&lt;p>But I&amp;rsquo;ve faced few pain points by doing so. I was often forgetting to &lt;code>source venv/bin/activate&lt;/code>, meaning I &lt;code>pip install my-package&lt;/code> on my global system.&lt;/p>
&lt;p>I also had bad secrets management by setting them not encrypted in a Shell script loaded at my program start.&lt;/p>
&lt;p>As bad as:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">DB_NAME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;db_name&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">DB_USER&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;user&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">DB_PASS&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;pass&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">DB_HOST&lt;/span>&lt;span class="o">=&lt;/span>172.17.0.2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">DB_PORT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">3306&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Even if some great code editors can handle &lt;code>python interpreters&lt;/code> in virtual environment, such as Vscode, I felt like my workflow automation was not as complete as it could be.&lt;/p>
&lt;h1 id="direnv">Direnv
&lt;/h1>&lt;p>How to ensure not forgetting to load a virtual environment and install package globally while working on our project ?&lt;/p>
&lt;h2 id="what-is-direnv-and-how-it-works">What is direnv and how it works
&lt;/h2>&lt;p>From official documentation&lt;/p>
&lt;blockquote>
&lt;p>direnv is an extension for your shell. It augments existing shells with a new feature that can load and unload environment variables depending on the current directory.
Before each prompt, direnv checks for the existence of a .envrc file (and optionally a .env file) in the current and parent directories. If the file exists (and is authorized), it is loaded into a bash sub-shell and all exported variables are then captured by direnv and then made available to the current shell.&lt;/p>
&lt;p>It supports hooks for all the common shells like bash, zsh, tcsh and fish. This allows project-specific environment variables without cluttering the ~/.profile file.&lt;/p>
&lt;p>Because direnv is compiled into a single static executable, it is fast enough to be unnoticeable on each prompt. It is also language-agnostic and can be used to build solutions similar to rbenv, pyenv and phpenv.&lt;/p>
&lt;/blockquote>
&lt;h2 id="direnv-installation">direnv installation
&lt;/h2>&lt;p>&lt;code>direnv&lt;/code> is accessible through packages in almost all distributions.&lt;/p>
&lt;h3 id="package-installation">Package installation
&lt;/h3>&lt;p>If you want a global system installation :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/ sudo apt-get install direnv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="manual-installation">Manual installation
&lt;/h3>&lt;p>If you want custom installation, take a look on this &lt;a class="link" href="https://direnv.net/install.sh" target="_blank" rel="noopener"
>script&lt;/a> hosted by direnv official documentation.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/ curl -sfL https://direnv.net/install.sh &lt;span class="p">|&lt;/span> bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="shell-configuration">Shell configuration
&lt;/h3>&lt;p>Once &lt;code>direnv&lt;/code> is installed you need to configure your &lt;code>$SHELL&lt;/code> in order to hook it with your default shell.
It supports &lt;code>bash&lt;/code>, &lt;code>zsh&lt;/code>, &lt;code>fish&lt;/code>, &lt;code>tcsh&lt;/code> and &lt;code>elvish&lt;/code>.&lt;/p>
&lt;p>&lt;em>e.g with zsh&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/ &lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;eval &amp;#34;$(direnv hook zsh)&amp;#34;&amp;#39;&lt;/span> &amp;gt;&amp;gt; ~/.zshrc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">λ ~/ &lt;span class="nb">source&lt;/span> ~/.zshrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="how-python-works-with-direnv">How python works with direnv
&lt;/h2>&lt;p>We can load a Python virtual environment thanks to &lt;code>direnv&lt;/code>, to do so we need to specify &lt;code>layout&lt;/code> command in a &lt;code>.envrc&lt;/code> file located at our root project.&lt;/p>
&lt;p>Let&amp;rsquo;s create our project directory first.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/ mkdir project &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">cd&lt;/span> project
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Creat our &lt;code>.envrc&lt;/code> file.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/project/ &lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;layout python3&amp;#39;&lt;/span> &amp;gt; .envrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You will notice an error message like :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">direnv: error project/.envrc is blocked. Run `direnv allow` to approve its content
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>This is a security way to block default content in your file. You can allow it thanks to :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/project/ direnv allow
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">direnv: loading ~/project/.envrc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">direnv: &lt;span class="nb">export&lt;/span> +VIRTUAL_ENV ~PATH
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Output inform us that virtual environment was automatically created for us. You won&amp;rsquo;t see any prompt modification (as &lt;code>virtualenv&lt;/code> does while &lt;code>source venv/bin/activate&lt;/code>) it&amp;rsquo;s normal.&lt;/p>
&lt;p>Quick check of our Python binary with :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/project/ which python
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">project/.direnv/python-3.10.4/bin/python
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You can then work as you normally do through &lt;code>venv&lt;/code> by installing your python dependencies.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># install a single package&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">λ ~/project/ pip install django
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># or install your project dependencies&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">λ ~/project/ pip install -r requirements.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;em>Note: we will no longer use &lt;code>pip&lt;/code> but &lt;code>poetry&lt;/code>, see Poetry section on this post for more information.&lt;/em>&lt;/p>
&lt;p>Just to be clear, &lt;code>direnv&lt;/code> will automatically load your virtual environement when you move in your project directory. As soon as you will move out, environment will also be automatically deactivated.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/project/ &lt;span class="nb">cd&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">direnv: unloading
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>That&amp;rsquo;s could be enough for common use if you don&amp;rsquo;t need a specific Python version other than one installed on your system, in some cases you will want to work with specific versions, that&amp;rsquo;s why we need &lt;code>pyenv&lt;/code>.&lt;/p>
&lt;h1 id="pyenv">Pyenv
&lt;/h1>&lt;p>&lt;code>pyenv&lt;/code> lets you easily switch between multiple versions of Python. It&amp;rsquo;s simple, unobtrusive, and follows the UNIX tradition of single-purpose tools that do one thing well.
It allows you to change Python version for each project and it supported by &lt;code>direnv&lt;/code> since &lt;code>2.21.0&lt;/code>.&lt;/p>
&lt;h2 id="installation-and-configuration">Installation and Configuration
&lt;/h2>&lt;p>Get &lt;code>pyenv&lt;/code> :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/ curl -L https://pyenv.run &lt;span class="p">|&lt;/span> bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Configure your $SHELL.&lt;/p>
&lt;p>&lt;em>e.g with zsh&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/ &lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;export PYENV_ROOT=&amp;#34;$HOME/.pyenv&amp;#34;&amp;#39;&lt;/span> &amp;gt;&amp;gt; ~/.zshrc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">λ ~/ &lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;command -v pyenv &amp;gt;/dev/null || export PATH=&amp;#34;$PYENV_ROOT/bin:$PATH&amp;#34;&amp;#39;&lt;/span> &amp;gt;&amp;gt; ~/.zshrc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">λ ~/ &lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;eval &amp;#34;$(pyenv init -)&amp;#34;&amp;#39;&lt;/span> &amp;gt;&amp;gt; ~/.zshrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Check installation:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/ pyenv --version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pyenv 2.3.1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>And install latest Python version at this date &lt;code>3.10.5&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/ pyenv install 3.10.5
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="use-pyenv-with-direnv">Use pyenv with direnv
&lt;/h2>&lt;p>Now &lt;code>pyenv&lt;/code> is installed, let&amp;rsquo;s interface it with our project and &lt;code>direnv&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/ &lt;span class="nb">cd&lt;/span> project/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">λ ~/ &lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;layout pyenv 3.10.5&amp;#39;&lt;/span> &amp;gt; .envrc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">λ ~/ direnv allow
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Check our Python version and interpreter :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/project/ python --version &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> which python
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Python 3.10.5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">~/project/.direnv/python-3.10.5/bin/python
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>That&amp;rsquo;s it.&lt;/p>
&lt;h1 id="poetry">Poetry
&lt;/h1>&lt;h2 id="what-is-poetry">What is Poetry
&lt;/h2>&lt;p>Poetry is a tool for dependency management and packaging in Python. It allows you to declare the libraries your project depends on and it will manage (install/update) them for you.&lt;/p>
&lt;p>Poetry will in fact replace &lt;code>pip&lt;/code> usage and provide several useful advantages such as :&lt;/p>
&lt;ul>
&lt;li>one configuration file for all dependencies and their configs&lt;/li>
&lt;li>&lt;em>can create and manage virtual environments&lt;/em> &amp;lt;&amp;ndash; True, but we manage with &lt;code>direnv&lt;/code>&lt;/li>
&lt;li>automatically resolves dependencies of installed plugins&lt;/li>
&lt;/ul>
&lt;h2 id="poetry-installation">Poetry installation
&lt;/h2>&lt;p>Poetry documentation provides installation guidelines and has a part for &lt;strong>osx/linux/bashonwindows&lt;/strong> distributions :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/ curl -sSL https://install.python-poetry.org &lt;span class="p">|&lt;/span> python3 -
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Retrieving Poetry metadata
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Welcome to Poetry!&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">This will download and install the latest version of Poetry,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">a dependency and package manager &lt;span class="k">for&lt;/span> Python.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">It will add the &lt;span class="sb">`&lt;/span>poetry&lt;span class="sb">`&lt;/span> &lt;span class="nb">command&lt;/span> to Poetry&lt;span class="err">&amp;#39;&lt;/span>s bin directory, located at:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">$HOME&lt;/span>/.local/bin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">You can uninstall at any &lt;span class="nb">time&lt;/span> by executing this script with the --uninstall option,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">and these changes will be reverted.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Installing Poetry &lt;span class="o">(&lt;/span>1.1.13&lt;span class="o">)&lt;/span>: Done
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Poetry &lt;span class="o">(&lt;/span>1.1.13&lt;span class="o">)&lt;/span> is installed now. Great!
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">You can &lt;span class="nb">test&lt;/span> that everything is &lt;span class="nb">set&lt;/span> up by executing:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">`&lt;/span>poetry --version&lt;span class="sb">`&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You can check your installation and &lt;code>poetry&lt;/code> version :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/ poetry --version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Poetry version 1.1.13
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="poetry-shell-configuration">Poetry shell Configuration
&lt;/h3>&lt;p>You can enable tab completion for your shell. &lt;a class="link" href="https://python-poetry.org/docs/master/#enable-tab-completion-for-bash-fish-or-zsh" target="_blank" rel="noopener"
>This documentation&lt;/a> has guide for each shell.&lt;/p>
&lt;p>&lt;em>e.g with ZSH and Oh-my-zsh&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/ mkdir &lt;span class="nv">$ZSH_CUSTOM&lt;/span>/plugins/poetry
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">poetry completions zsh &amp;gt; &lt;span class="nv">$ZSH_CUSTOM&lt;/span>/plugins/poetry/_poetry
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>For oh-my-zsh, you must then enable poetry in your ~/.zshrc plugins&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">plugins&lt;span class="o">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> poetry
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="poetry-usage">Poetry usage
&lt;/h2>&lt;p>From &lt;code>poetry&lt;/code> documentation, you can use it for new project and|or existing one.&lt;/p>
&lt;h3 id="new-project">New project
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/ poetry new poetry-demo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>This will create the poetry-demo directory with the following content:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">poetry-demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── pyproject.toml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── README.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── poetry_demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── __init__.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── tests
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └── __init__.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="existing-project">Existing project
&lt;/h3>&lt;p>Instead of creating a new project, Poetry can be used to ‘initialise’ a pre-populated directory. To interactively create a &lt;code>pyproject.toml&lt;/code> file in directory pre-existing-project :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/ &lt;span class="nb">cd&lt;/span> project
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">λ ~/project/ poetry init
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="add-dependecies">Add dependecies
&lt;/h3>&lt;p>As simple as :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/project/ poetry add django
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Using version ^4.0.5 &lt;span class="k">for&lt;/span> Django
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Updating dependencies
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Resolving dependencies... &lt;span class="o">(&lt;/span>0.9s&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Writing lock file
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Package operations: &lt;span class="m">3&lt;/span> installs, &lt;span class="m">0&lt;/span> updates, &lt;span class="m">0&lt;/span> removals
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> • Installing asgiref &lt;span class="o">(&lt;/span>3.5.2&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> • Installing sqlparse &lt;span class="o">(&lt;/span>0.4.2&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> • Installing django &lt;span class="o">(&lt;/span>4.0.5&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>It will automatically find a suitable version constraint and install the package and sub-dependencies.&lt;/p>
&lt;p>Find details on your &lt;code>toml&lt;/code> config file :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/project/ cat pyproject.toml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>tool.poetry&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;project&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">version&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;0.1.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">description&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">authors&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;Corentin Deret &amp;lt;corentin.deret@payfit.com&amp;gt;&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>tool.poetry.dependencies&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">python&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;^3.10&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">Django&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;^4.0.5&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>tool.poetry.dev-dependencies&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>build-system&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">requires&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;poetry-core&amp;gt;=1.0.0&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">build-backend &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;poetry.core.masonry.api&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="link-poetry-with-direnv">Link Poetry with direnv
&lt;/h2>&lt;p>From &lt;code>poetry&lt;/code> documentation :&lt;/p>
&lt;blockquote>
&lt;p>By default, poetry creates a virtual environment in {cache-dir}/virtualenvs ({cache-dir}\virtualenvs on Windows). You can change the cache-dir value by editing the poetry config. Additionally, you can use the virtualenvs.in-project configuration variable to create virtual environment within your project directory.&lt;/p>
&lt;/blockquote>
&lt;p>What we want here, is to tell &lt;code>poetry&lt;/code> not to configure its own environment but to use our previous &lt;code>direnv&lt;/code> configuration.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># .envrc&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">layout pyenv 3.10.5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># POETRY&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> ! -f pyproject.toml &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> log_status &lt;span class="s1">&amp;#39;No pyproject.toml found. Will initialize poetry in no-interactive mode&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> poetry init -n -q
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> poetry run pip install -U pip wheel setuptools
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">poetry run &lt;span class="nb">echo&lt;/span> &amp;gt;&amp;gt; /dev/null
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">local&lt;/span> &lt;span class="nv">VENV&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>dirname &lt;span class="k">$(&lt;/span>poetry run which python&lt;span class="k">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">VIRTUAL_ENV&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$VENV&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> rev &lt;span class="p">|&lt;/span> cut -d&lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span> -f2- &lt;span class="p">|&lt;/span> rev&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">POETRY_ACTIVE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PATH_add &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$VENV&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> ! -L .venv &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ln -ns &lt;span class="nv">$VIRTUAL_ENV&lt;/span> .venv
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Let&amp;rsquo;s allow our &lt;code>direnv&lt;/code> and check that we are using our correct environment.&lt;/p>
&lt;p>For our example with django, we should be able to retrieve our dependencie in &lt;code>.direnv&lt;/code> folder.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/project/ find .direnv -name &lt;span class="s1">&amp;#39;django&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.direnv/python-3.10.5/lib/python3.10/site-packages/django
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.direnv/python-3.10.5/lib/python3.10/site-packages/django/forms/jinja2/django
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.direnv/python-3.10.5/lib/python3.10/site-packages/django/forms/templates/django
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="gpg">GPG
&lt;/h1>&lt;p>Remember about managing secrets ? Now that we have our virtual environements set, how can we manage to work with secrets without write them directly in our project/repository ?&lt;/p>
&lt;p>Before we can use a password manager such as &lt;code>pass&lt;/code> we need a &lt;code>gpg key id&lt;/code>.&lt;/p>
&lt;h2 id="generate-a-key">Generate a key
&lt;/h2>&lt;p>Let&amp;rsquo;s first generete one.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/ gpg --full-generate-key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Please &lt;span class="k">select&lt;/span> what kind of key you want:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>1&lt;span class="o">)&lt;/span> RSA and RSA &lt;span class="o">(&lt;/span>default&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>2&lt;span class="o">)&lt;/span> DSA and Elgamal
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>3&lt;span class="o">)&lt;/span> DSA &lt;span class="o">(&lt;/span>sign only&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>4&lt;span class="o">)&lt;/span> RSA &lt;span class="o">(&lt;/span>sign only&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>14&lt;span class="o">)&lt;/span> Existing key from card
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Your selection? &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">RSA keys may be between &lt;span class="m">1024&lt;/span> and &lt;span class="m">4096&lt;/span> bits long.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">What keysize &lt;span class="k">do&lt;/span> you want? &lt;span class="o">(&lt;/span>3072&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Requested keysize is &lt;span class="m">3072&lt;/span> bits
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Please specify how long the key should be valid.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">0&lt;/span> &lt;span class="o">=&lt;/span> key does not expire
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;n&amp;gt; &lt;span class="o">=&lt;/span> key expires in n days
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;n&amp;gt;w &lt;span class="o">=&lt;/span> key expires in n weeks
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;n&amp;gt;m &lt;span class="o">=&lt;/span> key expires in n months
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;n&amp;gt;y &lt;span class="o">=&lt;/span> key expires in n years
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Key is valid &lt;span class="k">for&lt;/span>? &lt;span class="o">(&lt;/span>0&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Key does not expire at all
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Is this correct? &lt;span class="o">(&lt;/span>y/N&lt;span class="o">)&lt;/span> y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Real name: Kader Ovski
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Email address: me@lebaron.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Comment:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">You selected this USER-ID:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;Kader Ovski &amp;lt;me@lebaron.sh&amp;gt;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Change &lt;span class="o">(&lt;/span>N&lt;span class="o">)&lt;/span>ame, &lt;span class="o">(&lt;/span>C&lt;span class="o">)&lt;/span>omment, &lt;span class="o">(&lt;/span>E&lt;span class="o">)&lt;/span>mail or &lt;span class="o">(&lt;/span>O&lt;span class="o">)&lt;/span>kay/&lt;span class="o">(&lt;/span>Q&lt;span class="o">)&lt;/span>uit? O
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">We need to generate a lot of random bytes. It is a good idea to perform
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">some other action &lt;span class="o">(&lt;/span>&lt;span class="nb">type&lt;/span> on the keyboard, move the mouse, utilize the
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">disks&lt;span class="o">)&lt;/span> during the prime generation&lt;span class="p">;&lt;/span> this gives the random number
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">generator a better chance to gain enough entropy.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gpg: key 0854057891EFB8F0 marked as ultimately trusted
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pub rsa3072 2022-06-10 &lt;span class="o">[&lt;/span>SC&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> DC3EC748A8D97169F47C16690854057891EFB8F0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">uid Kader Ovski &amp;lt;me@lebaron.sh&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sub rsa3072 2022-06-10 &lt;span class="o">[&lt;/span>E&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="get-key-id">Get key ID
&lt;/h2>&lt;p>We can then list our new key :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/ gpg --list-keys
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gpg: checking the trustdb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gpg: marginals needed: &lt;span class="m">3&lt;/span> completes needed: &lt;span class="m">1&lt;/span> trust model: pgp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">gpg: depth: &lt;span class="m">0&lt;/span> valid: &lt;span class="m">1&lt;/span> signed: &lt;span class="m">0&lt;/span> trust: 0-, 0q, 0n, 0m, 0f, 1u
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">$HOME&lt;/span>/.gnupg/pubring.kbx
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pub rsa3072 2022-06-10 &lt;span class="o">[&lt;/span>SC&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> DC3EC748A8D97169F47C16690854057891EFB8F0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">uid &lt;span class="o">[&lt;/span>ultimate&lt;span class="o">]&lt;/span> Kader Ovski &amp;lt;me@lebaron.sh&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sub rsa3072 2022-06-10 &lt;span class="o">[&lt;/span>E&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="pass">Pass
&lt;/h1>&lt;p>&lt;code>pass&lt;/code> is the standard unix password manager.&lt;/p>
&lt;blockquote>
&lt;p>With pass, each password lives inside of a gpg encrypted file whose filename is the title of the website or resource that requires the password. These encrypted files may be organized into meaningful folder hierarchies, copied from computer to computer, and, in general, manipulated using standard command line file management utilities.&lt;/p>
&lt;/blockquote>
&lt;h2 id="pass-installation">Pass installation
&lt;/h2>&lt;p>&lt;code>pass&lt;/code> is available in almost all distribution and can be installed as follow:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/ sudo apt-get install pass
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="pass-usage">Pass usage
&lt;/h2>&lt;p>Now that we have &lt;code>pass&lt;/code> installed on our system &lt;strong>and&lt;/strong> a valid &lt;code>gpg_key_id&lt;/code> we can init our password manager with :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/ pass init DC3EC748A8D97169F47C16690854057891EFB8F0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir: created directory &lt;span class="s1">&amp;#39;$HOME/.password-store/&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Password store initialized &lt;span class="k">for&lt;/span> DC3EC748A8D97169F47C16690854057891EFB8F0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Let&amp;rsquo;s insert our first password :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/ pass insert lebaron.sh/blog/some_secret
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir: created directory &lt;span class="s1">&amp;#39;$HOME/.password-store/lebaron.sh&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir: created directory &lt;span class="s1">&amp;#39;$HOME/.password-store/lebaron.sh/blog&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enter password &lt;span class="k">for&lt;/span> lebaron.sh/blog/some_secret:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Retype password &lt;span class="k">for&lt;/span> lebaron.sh/blog/some_secret:
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Our password is now store in our &lt;code>pass&lt;/code> :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/ pass
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Password Store
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sb">`&lt;/span>-- lebaron.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sb">`&lt;/span>-- blog
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sb">`&lt;/span>-- some_secret
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You can get your secret by typing and entering your gpg secret passphrase :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/ pass show lebaron.sh/blog/some_secret
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">my_secret
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="tomb">Tomb
&lt;/h1>&lt;p>Due to the structure of pass, file and directory names are not encrypted in the password store. &lt;code>pass-tomb&lt;/code> provides a convenient solution to put your password store in a Tomb and then keep your password tree encrypted when you are not using it.&lt;/p>
&lt;p>It uses the same GPG key to encrypt passwords and tomb, therefore you don&amp;rsquo;t need to manage more key or secret. Moreover, you can ask pass-tomb to automatically close your store after a given time.&lt;/p>
&lt;h2 id="tomb-installation">Tomb installation
&lt;/h2>&lt;p>You can use package installation on your distribution :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/ sudo apt install pass-extension-tomb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="tomb-usage">Tomb usage
&lt;/h2>&lt;p>Create a new password tomb:&lt;/p>
&lt;p>&lt;em>e.g&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&amp;gt; pass tomb DC3EC748A8D97169F47C16690854057891EFB8F0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>*&lt;span class="o">)&lt;/span> Your password tomb has been created and opened in ~/.password-store.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>*&lt;span class="o">)&lt;/span> Password store initialized &lt;span class="k">for&lt;/span> DC3EC748A8D97169F47C16690854057891EFB8F0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> . Your tomb is: ~/.password.tomb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> . Your tomb key is: ~/.password.key.tomb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> . You can now use pass as usual.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> . When finished, close the password tomb using &lt;span class="s1">&amp;#39;pass close&amp;#39;&lt;/span>.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You can now use the best part of &lt;code>pass-tomb&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>open your tomb&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/ pass open
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>*&lt;span class="o">)&lt;/span> Your password tomb has been opened in &lt;span class="nv">$HOME&lt;/span>/.password-store/.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> . You can now use pass as usual.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> . When finished, close the password tomb using &lt;span class="s1">&amp;#39;pass close&amp;#39;&lt;/span>.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>close your tomb&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/ pass close
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>*&lt;span class="o">)&lt;/span> Your password tomb has been closed.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> . Your passwords remain present in &lt;span class="nv">$HOME&lt;/span>/.password.tomb.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Let&amp;rsquo;s check what is happening with &lt;code>open&lt;/code> and &lt;code>close&lt;/code> options.&lt;/p>
&lt;p>When our &lt;code>tomb&lt;/code> is closed, &lt;code>pass&lt;/code> command and our passwords path looks like this:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/ pass
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Password Store
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">λ ~/ tree .password-store/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.password-store/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span> directory, &lt;span class="m">0&lt;/span> files
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>We can not see our key:value (path/password-name) elements on output and filesystem.&lt;/p>
&lt;p>When opening our &lt;code>tomb&lt;/code> we are decrypting our password database :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/ pass &lt;span class="p">;&lt;/span> tree .password-store/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Password Store
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── lebaron.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   └── blog
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│  └── some_secret.gpg
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">λ ~/ tree .password-store/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.password-store/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── lebaron.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   └── blog
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│  └── some_secret.gpg
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="secrets-with-direnv-and-pass">Secrets with direnv and pass
&lt;/h1>&lt;p>We can now manage to use our &lt;code>secrets&lt;/code> in our Python code thanks to &lt;code>direnv&lt;/code> and &lt;code>pass&lt;/code>.&lt;/p>
&lt;p>We need to modify a bit our &lt;code>.envrc&lt;/code> in our project directory by checking if the &lt;code>tomb&lt;/code> is open or not.
I&amp;rsquo;m doing it by checking if I can &lt;code>stat&lt;/code> my &lt;code>$HOME/.password-store/.gpg-id&lt;/code> which is possible when the &lt;code>tomb&lt;/code> is open. If not it means &lt;code>tomb&lt;/code> is close and need to be open.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># .envrc&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">layout pyenv 3.10.5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># POETRY&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> ! -f pyproject.toml &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> log_status &lt;span class="s1">&amp;#39;No pyproject.toml found. Will initialize poetry in no-interactive mode&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> poetry init -n -q
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> poetry run pip install -U pip wheel setuptools
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">poetry run &lt;span class="nb">echo&lt;/span> &amp;gt;&amp;gt; /dev/null
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">local&lt;/span> &lt;span class="nv">VENV&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>dirname &lt;span class="k">$(&lt;/span>poetry run which python&lt;span class="k">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">VIRTUAL_ENV&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$VENV&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> rev &lt;span class="p">|&lt;/span> cut -d&lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span> -f2- &lt;span class="p">|&lt;/span> rev&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">POETRY_ACTIVE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PATH_add &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$VENV&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> ! -L .venv &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ln -ns &lt;span class="nv">$VIRTUAL_ENV&lt;/span> .venv
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># CHEKING IF TOMB IS OPEN&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> ! stat &lt;span class="nv">$HOME&lt;/span>/.password-store/.gpg-id &amp;gt; /dev/null 2&amp;gt;&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># IF NOT OPEN IT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pass open
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># THEN PUT SECRET IN ENV&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">MY_SECRET&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>pass show lebaron.sh/blog/some_secret&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>We can now reload our &lt;code>direnv&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/project/ direnv reload
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">direnv: loading ~/project/.envrc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">(&lt;/span>*&lt;span class="o">)&lt;/span> Your password tomb has been opened in /home/&lt;span class="nv">$USER&lt;/span>/.password-store/.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> . You can now use pass as usual.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> . When finished, close the password tomb using &lt;span class="s1">&amp;#39;pass close&amp;#39;&lt;/span>.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">direnv: &lt;span class="nb">export&lt;/span> +MY_SECRET +VIRTUAL_ENV ~PATH
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Notice here &lt;code>+MY_SECRET&lt;/code> in the output, telling us it is accessible through our environment.&lt;/p>
&lt;p>We can try to reach our secret :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/project/ &lt;span class="nb">echo&lt;/span> &lt;span class="nv">$MY_SECRET&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">my_secret
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>What is really important here is that &lt;strong>we are not storing clear secrets&lt;/strong> in our code, project or repo.
All our secrets will be reachable through our virtual environment and can be used in you Python code like this :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="nn">os&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="n">secret&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">environ&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;MY_SECRET&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">secret&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">my_secret&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="direnv-advanced-configurations">Direnv advanced configurations
&lt;/h1>&lt;p>In more complex projects you may need &lt;code>commands&lt;/code>, &lt;code>external dependencies&lt;/code>, &lt;code>third-party&lt;/code>, or &lt;code>third-party configuration&lt;/code>. Let&amp;rsquo;s see how we can manage them with &lt;code>direnv&lt;/code>.&lt;/p>
&lt;h2 id="check-for-commands-dependencies">Check for commands dependencies
&lt;/h2>&lt;p>In your &lt;code>.envrc&lt;/code> file, you can ensure you can use and reach some commands needed in your project.&lt;/p>
&lt;p>You can do as follow:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># .envrc&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">layout pyenv 3.10.5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># POETRY&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> ! -f pyproject.toml &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> log_status &lt;span class="s1">&amp;#39;No pyproject.toml found. Will initialize poetry in no-interactive mode&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> poetry init -n -q
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> poetry run pip install -U pip wheel setuptools
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">poetry run &lt;span class="nb">echo&lt;/span> &amp;gt;&amp;gt; /dev/null
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">local&lt;/span> &lt;span class="nv">VENV&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>dirname &lt;span class="k">$(&lt;/span>poetry run which python&lt;span class="k">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">VIRTUAL_ENV&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$VENV&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> rev &lt;span class="p">|&lt;/span> cut -d&lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span> -f2- &lt;span class="p">|&lt;/span> rev&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">POETRY_ACTIVE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PATH_add &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$VENV&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> ! -L .venv &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ln -ns &lt;span class="nv">$VIRTUAL_ENV&lt;/span> .venv
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># CHEKING IF TOMB IS OPEN&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> ! stat &lt;span class="nv">$HOME&lt;/span>/.password-store/.gpg-id &amp;gt; /dev/null 2&amp;gt;&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># IF NOT OPEN IT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pass open
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># THEN PUT SECRET IN ENV&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">MY_SECRET&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>pass show lebaron.sh/blog/some_secret&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># CHECKING COMMANDS DEPENDENCIES&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">DIRENV_CMD_DEPENDENCIES&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;unzip tar mkdir curl chmod rm&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> mandatory_cmd in &lt;span class="si">${&lt;/span>&lt;span class="nv">DIRENV_CMD_DEPENDENCIES&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -z &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>which &lt;span class="si">${&lt;/span>&lt;span class="nv">mandatory_cmd&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;===&amp;gt; Mandatory command not found: &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">mandatory_cmd&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">exit&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="third-party-binaries">Third-party binaries
&lt;/h2>&lt;p>We can arrange to use specific third-party binaries such as &lt;code>packer&lt;/code>, &lt;code>terraform&lt;/code>, &lt;code>vault&lt;/code> etc…&lt;/p>
&lt;p>We will tell &lt;code>.direnv&lt;/code> to use &lt;code>PATH&lt;/code> in order to place our third-party binaries in &lt;code>.direnv/bin&lt;/code> path.&lt;/p>
&lt;p>Let&amp;rsquo;s grab our &lt;code>.envrc&lt;/code> file again:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># .envrc&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">layout pyenv 3.10.5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># POETRY&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> ! -f pyproject.toml &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> log_status &lt;span class="s1">&amp;#39;No pyproject.toml found. Will initialize poetry in no-interactive mode&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> poetry init -n -q
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> poetry run pip install -U pip wheel setuptools
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">poetry run &lt;span class="nb">echo&lt;/span> &amp;gt;&amp;gt; /dev/null
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">local&lt;/span> &lt;span class="nv">VENV&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>dirname &lt;span class="k">$(&lt;/span>poetry run which python&lt;span class="k">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">VIRTUAL_ENV&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$VENV&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> rev &lt;span class="p">|&lt;/span> cut -d&lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span> -f2- &lt;span class="p">|&lt;/span> rev&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">POETRY_ACTIVE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PATH_add &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$VENV&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> ! -L .venv &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ln -ns &lt;span class="nv">$VIRTUAL_ENV&lt;/span> .venv
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># CHEKING IF TOMB IS OPEN&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> ! stat &lt;span class="nv">$HOME&lt;/span>/.password-store/.gpg-id &amp;gt; /dev/null 2&amp;gt;&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># IF NOT OPEN IT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pass open
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># THEN PUT SECRET IN ENV&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">MY_SECRET&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>pass show lebaron.sh/blog/some_secret&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># CHECKING COMMANDS DEPENDENCIES&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">DIRENV_CMD_DEPENDENCIES&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;unzip tar mkdir curl chmod rm&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> mandatory_cmd in &lt;span class="si">${&lt;/span>&lt;span class="nv">DIRENV_CMD_DEPENDENCIES&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -z &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>which &lt;span class="si">${&lt;/span>&lt;span class="nv">mandatory_cmd&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;===&amp;gt; Mandatory command not found: &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">mandatory_cmd&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">exit&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">DIRENV_TMP_DIR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PWD&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/.direnv&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">DIRENV_BIN_DIR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">DIRENV_TMP_DIR&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/bin&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> ! -e &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">DIRENV_BIN_DIR&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mkdir -p &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">DIRENV_BIN_DIR&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">DIRENV_BIN_DIR&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PATH&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now install our binary, let&amp;rsquo;s try it with &lt;code>packer&lt;/code> Hashicorp binary :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># .envrc&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">layout pyenv 3.10.5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># POETRY&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> ! -f pyproject.toml &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> log_status &lt;span class="s1">&amp;#39;No pyproject.toml found. Will initialize poetry in no-interactive mode&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> poetry init -n -q
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> poetry run pip install -U pip wheel setuptools
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">poetry run &lt;span class="nb">echo&lt;/span> &amp;gt;&amp;gt; /dev/null
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">local&lt;/span> &lt;span class="nv">VENV&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>dirname &lt;span class="k">$(&lt;/span>poetry run which python&lt;span class="k">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">VIRTUAL_ENV&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$VENV&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> rev &lt;span class="p">|&lt;/span> cut -d&lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span> -f2- &lt;span class="p">|&lt;/span> rev&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">POETRY_ACTIVE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PATH_add &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$VENV&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> ! -L .venv &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ln -ns &lt;span class="nv">$VIRTUAL_ENV&lt;/span> .venv
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># CHEKING IF TOMB IS OPEN&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> ! stat &lt;span class="nv">$HOME&lt;/span>/.password-store/.gpg-id &amp;gt; /dev/null 2&amp;gt;&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># IF NOT OPEN IT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pass open
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># THEN PUT SECRET IN ENV&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">MY_SECRET&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>pass show lebaron.sh/blog/some_secret&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># CHECKING COMMANDS DEPENDENCIES&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">DIRENV_CMD_DEPENDENCIES&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;unzip tar mkdir curl chmod rm&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> mandatory_cmd in &lt;span class="si">${&lt;/span>&lt;span class="nv">DIRENV_CMD_DEPENDENCIES&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -z &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>which &lt;span class="si">${&lt;/span>&lt;span class="nv">mandatory_cmd&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;===&amp;gt; Mandatory command not found: &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">mandatory_cmd&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">exit&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">DIRENV_TMP_DIR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PWD&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/.direnv&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">DIRENV_BIN_DIR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">DIRENV_TMP_DIR&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/bin&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> ! -e &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">DIRENV_BIN_DIR&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mkdir -p &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">DIRENV_BIN_DIR&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">DIRENV_BIN_DIR&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PATH&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># PACKER INSTALLATION&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">PACKER_VERSION&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;1.8.1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">PACKER_ARCH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;linux_amd64&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">PACKER_PKG_NAME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;packer_&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PACKER_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">_&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PACKER_ARCH&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">.zip&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">PACKER_PKG_URL&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;https://releases.hashicorp.com/packer/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PACKER_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PACKER_PKG_NAME&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">PACKER_PKG_PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">DIRENV_TMP_DIR&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PACKER_PKG_NAME&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> ! -e &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">DIRENV_BIN_DIR&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/packer&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;===&amp;gt; Getting packer:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PACKER_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PACKER_ARCH&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> (can take a while to execute)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> curl -s -L &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PACKER_PKG_URL&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -o &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PACKER_PKG_PATH&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> unzip &lt;span class="si">${&lt;/span>&lt;span class="nv">PACKER_PKG_PATH&lt;/span>&lt;span class="si">}&lt;/span> -d &lt;span class="si">${&lt;/span>&lt;span class="nv">DIRENV_BIN_DIR&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> chmod &lt;span class="m">700&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">DIRENV_BIN_DIR&lt;/span>&lt;span class="si">}&lt;/span>/packer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> rm -f &lt;span class="si">${&lt;/span>&lt;span class="nv">PACKER_PKG_PATH&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Let&amp;rsquo;s try out our new configuration :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/project direnv allow
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">direnv: loading ~/project/.envrc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">===&lt;/span>&amp;gt; Getting packer:1.8.1:linux_amd64 &lt;span class="o">(&lt;/span>can take a &lt;span class="k">while&lt;/span> to execute&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Archive: ~/project/.direnv/packer_1.8.1_linux_amd64.zip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> inflating: ~/project/.direnv/bin/packer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">direnv: &lt;span class="nb">export&lt;/span> +MY_SECRET +VIRTUAL_ENV ~PATH
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now &lt;code>packer&lt;/code> is installed in our &lt;code>PATH&lt;/code> let&amp;rsquo;s locate it and run it :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/project/ which packer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">~/project/.direnv/bin/packer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">λ ~/ packer --version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1.8.1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>If in the futur you need to change &lt;code>packer&lt;/code> version you just have to remove your current &lt;code>packer&lt;/code> binary and modify &lt;code>PACKER_VERSION&lt;/code> variable to rebuild your &lt;code>direnv&lt;/code>.&lt;/p>
&lt;h2 id="third-party-configs">Third-party configs
&lt;/h2>&lt;p>Of course, if our third-party need custom (or not) configurations we can specify them in our &lt;code>.envrc&lt;/code> but to keep pour code clear and organized we also can split our configs into subfiles.&lt;/p>
&lt;p>By adding this block at the end of our &lt;code>.envrc&lt;/code> file :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># .envrc &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># […]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ADDONS&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">ENV_ADDONS&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;.env.packer .env.custom_config&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> addon in &lt;span class="si">${&lt;/span>&lt;span class="nv">ENV_ADDONS&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -e &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PWD&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">addon&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">source&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">PWD&lt;/span>&lt;span class="si">}&lt;/span>/&lt;span class="si">${&lt;/span>&lt;span class="nv">addon&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>And then create your addons custom config file :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># .env.packer&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">PACKER_VAR1&lt;/span>&lt;span class="o">=&lt;/span>VAR1_VALUE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">PACKER_VAR2&lt;/span>&lt;span class="o">=&lt;/span>VAR2_VALUE
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># .env.custom_config&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">CUSTOM_VAR1&lt;/span>&lt;span class="o">=&lt;/span>CUSTOM1_VALUE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">CUSTOM_VAR2&lt;/span>&lt;span class="o">=&lt;/span>CUSTOM2_VALUE
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Don&amp;rsquo;t forget to reload:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">λ ~/project/ direnv reload
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="final-template">Final template
&lt;/h1>&lt;p>Here is a final &lt;code>.envrc&lt;/code> template you can grab and edit for your needs :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># .envrc&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">layout pyenv 3.10.5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># POETRY&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> ! -f pyproject.toml &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> log_status &lt;span class="s1">&amp;#39;No pyproject.toml found. Will initialize poetry in no-interactive mode&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> poetry init -n -q
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> poetry run pip install -U pip wheel setuptools
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">poetry run &lt;span class="nb">echo&lt;/span> &amp;gt;&amp;gt; /dev/null
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">local&lt;/span> &lt;span class="nv">VENV&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>dirname &lt;span class="k">$(&lt;/span>poetry run which python&lt;span class="k">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">VIRTUAL_ENV&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$VENV&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> rev &lt;span class="p">|&lt;/span> cut -d&lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span> -f2- &lt;span class="p">|&lt;/span> rev&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">POETRY_ACTIVE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PATH_add &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$VENV&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> ! -L .venv &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ln -ns &lt;span class="nv">$VIRTUAL_ENV&lt;/span> .venv
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># CHEKING IF TOMB IS OPEN&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> ! stat &lt;span class="nv">$HOME&lt;/span>/.password-store/.gpg-id &amp;gt; /dev/null 2&amp;gt;&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># IF NOT OPEN IT&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pass open
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># THEN PUT SECRET IN ENV&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">MY_SECRET&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>pass show lebaron.sh/blog/some_secret&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># CHECKING COMMANDS DEPENDENCIES&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">DIRENV_CMD_DEPENDENCIES&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;unzip tar mkdir curl chmod rm&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> mandatory_cmd in &lt;span class="si">${&lt;/span>&lt;span class="nv">DIRENV_CMD_DEPENDENCIES&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -z &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>which &lt;span class="si">${&lt;/span>&lt;span class="nv">mandatory_cmd&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;===&amp;gt; Mandatory command not found: &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">mandatory_cmd&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">exit&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">DIRENV_TMP_DIR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PWD&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/.direnv&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">DIRENV_BIN_DIR&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">DIRENV_TMP_DIR&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/bin&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> ! -e &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">DIRENV_BIN_DIR&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mkdir -p &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">DIRENV_BIN_DIR&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">DIRENV_BIN_DIR&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PATH&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># PACKER INSTALLATION&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">PACKER_VERSION&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;1.8.1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">PACKER_ARCH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;linux_amd64&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">PACKER_PKG_NAME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;packer_&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PACKER_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">_&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PACKER_ARCH&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">.zip&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">PACKER_PKG_URL&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;https://releases.hashicorp.com/packer/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PACKER_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PACKER_PKG_NAME&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">PACKER_PKG_PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">DIRENV_TMP_DIR&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PACKER_PKG_NAME&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> ! -e &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">DIRENV_BIN_DIR&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/packer&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;===&amp;gt; Getting packer:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PACKER_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PACKER_ARCH&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> (can take a while to execute)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> curl -s -L &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PACKER_PKG_URL&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -o &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PACKER_PKG_PATH&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> unzip &lt;span class="si">${&lt;/span>&lt;span class="nv">PACKER_PKG_PATH&lt;/span>&lt;span class="si">}&lt;/span> -d &lt;span class="si">${&lt;/span>&lt;span class="nv">DIRENV_BIN_DIR&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> chmod &lt;span class="m">700&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">DIRENV_BIN_DIR&lt;/span>&lt;span class="si">}&lt;/span>/packer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> rm -f &lt;span class="si">${&lt;/span>&lt;span class="nv">PACKER_PKG_PATH&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ADDONS&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">ENV_ADDONS&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;.env.packer .env.custom_config&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> addon in &lt;span class="si">${&lt;/span>&lt;span class="nv">ENV_ADDONS&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -e &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PWD&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">addon&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">source&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">PWD&lt;/span>&lt;span class="si">}&lt;/span>/&lt;span class="si">${&lt;/span>&lt;span class="nv">addon&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="conclusion">Conclusion
&lt;/h1>&lt;p>Yes this require a bit of knowledge and a some configurations to be efficient in this workflow, but keep in mind that all will be configured automatically and will be more easier version controlled.&lt;/p>
&lt;p>You can arrange in order to put your application in production area to share your GPG key or to manage multiple GPG key in a same &lt;code>pass&lt;/code> (&lt;em>eg one GPG ID for each team member&lt;/em>), version your pass and make it a git version accessible.&lt;/p>
&lt;p>All dependencies, with the same packages will be deployed exactly as your developpment area.&lt;/p>
&lt;p>Keep it simple.&lt;/p>
&lt;p>Starter template is available &lt;a class="link" href="https://gist.github.com/lebarondecharlus/f91f4c29a5f655920d4c65a62eb275b0" target="_blank" rel="noopener"
>here&lt;/a>.&lt;/p></description></item><item><title>cv</title><link>https://lebaron.sh/cv/</link><pubDate>Fri, 31 Dec 2021 11:38:18 +0000</pubDate><guid>https://lebaron.sh/cv/</guid><description>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;span class="lnt">136
&lt;/span>&lt;span class="lnt">137
&lt;/span>&lt;span class="lnt">138
&lt;/span>&lt;span class="lnt">139
&lt;/span>&lt;span class="lnt">140
&lt;/span>&lt;span class="lnt">141
&lt;/span>&lt;span class="lnt">142
&lt;/span>&lt;span class="lnt">143
&lt;/span>&lt;span class="lnt">144
&lt;/span>&lt;span class="lnt">145
&lt;/span>&lt;span class="lnt">146
&lt;/span>&lt;span class="lnt">147
&lt;/span>&lt;span class="lnt">148
&lt;/span>&lt;span class="lnt">149
&lt;/span>&lt;span class="lnt">150
&lt;/span>&lt;span class="lnt">151
&lt;/span>&lt;span class="lnt">152
&lt;/span>&lt;span class="lnt">153
&lt;/span>&lt;span class="lnt">154
&lt;/span>&lt;span class="lnt">155
&lt;/span>&lt;span class="lnt">156
&lt;/span>&lt;span class="lnt">157
&lt;/span>&lt;span class="lnt">158
&lt;/span>&lt;span class="lnt">159
&lt;/span>&lt;span class="lnt">160
&lt;/span>&lt;span class="lnt">161
&lt;/span>&lt;span class="lnt">162
&lt;/span>&lt;span class="lnt">163
&lt;/span>&lt;span class="lnt">164
&lt;/span>&lt;span class="lnt">165
&lt;/span>&lt;span class="lnt">166
&lt;/span>&lt;span class="lnt">167
&lt;/span>&lt;span class="lnt">168
&lt;/span>&lt;span class="lnt">169
&lt;/span>&lt;span class="lnt">170
&lt;/span>&lt;span class="lnt">171
&lt;/span>&lt;span class="lnt">172
&lt;/span>&lt;span class="lnt">173
&lt;/span>&lt;span class="lnt">174
&lt;/span>&lt;span class="lnt">175
&lt;/span>&lt;span class="lnt">176
&lt;/span>&lt;span class="lnt">177
&lt;/span>&lt;span class="lnt">178
&lt;/span>&lt;span class="lnt">179
&lt;/span>&lt;span class="lnt">180
&lt;/span>&lt;span class="lnt">181
&lt;/span>&lt;span class="lnt">182
&lt;/span>&lt;span class="lnt">183
&lt;/span>&lt;span class="lnt">184
&lt;/span>&lt;span class="lnt">185
&lt;/span>&lt;span class="lnt">186
&lt;/span>&lt;span class="lnt">187
&lt;/span>&lt;span class="lnt">188
&lt;/span>&lt;span class="lnt">189
&lt;/span>&lt;span class="lnt">190
&lt;/span>&lt;span class="lnt">191
&lt;/span>&lt;span class="lnt">192
&lt;/span>&lt;span class="lnt">193
&lt;/span>&lt;span class="lnt">194
&lt;/span>&lt;span class="lnt">195
&lt;/span>&lt;span class="lnt">196
&lt;/span>&lt;span class="lnt">197
&lt;/span>&lt;span class="lnt">198
&lt;/span>&lt;span class="lnt">199
&lt;/span>&lt;span class="lnt">200
&lt;/span>&lt;span class="lnt">201
&lt;/span>&lt;span class="lnt">202
&lt;/span>&lt;span class="lnt">203
&lt;/span>&lt;span class="lnt">204
&lt;/span>&lt;span class="lnt">205
&lt;/span>&lt;span class="lnt">206
&lt;/span>&lt;span class="lnt">207
&lt;/span>&lt;span class="lnt">208
&lt;/span>&lt;span class="lnt">209
&lt;/span>&lt;span class="lnt">210
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">###########&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Hello ! #&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">###########&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">whoami&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">uptime&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Corentin&lt;/span> &lt;span class="n">Deret&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SRE&lt;/span> &lt;span class="n">Dev&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">Ops&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">UNIX&lt;/span> &lt;span class="n">Teacher&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Uptime&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="mi">30&lt;/span> &lt;span class="n">years&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Professional&lt;/span> &lt;span class="n">Experience&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="mi">10&lt;/span> &lt;span class="n">years&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">describeme&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Mail&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">jobs&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">lebaron&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sh&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Nationality&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">French&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Languages&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">French&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">English&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Japanese&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Spanish&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Greek&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Chti&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Countries&lt;/span> &lt;span class="n">where&lt;/span> &lt;span class="n">I&lt;/span> &lt;span class="n">lived&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">France&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Bulgaria&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Cyprus&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Congo&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Kuwait&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Countries&lt;/span> &lt;span class="n">I&lt;/span> &lt;span class="n">visited&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">England&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Croatia&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Jordan&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Belgium&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Egypt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Poland&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Greece&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Germany&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Holland&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Italy&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Vatican&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Irland&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Scotland&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Portugal&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">I&lt;/span> &lt;span class="n">love&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">my&lt;/span> &lt;span class="n">wife&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">my&lt;/span> &lt;span class="n">cat&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Devoxx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Weboob&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">org&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Thinkpads&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">english&lt;/span> &lt;span class="n">boxing&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">climbing&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">crossfit&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">bike&lt;/span> &lt;span class="n">touring&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">l&lt;/span>\&lt;span class="s1">&amp;#39;echo des gnous, music, photography, coffee, (and chocolate)]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">donation&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">FreeBSD&lt;/span> &lt;span class="n">Foundation&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Cloud&lt;/span> &lt;span class="n">Native&lt;/span> &lt;span class="n">Foundation&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">quote&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">«&lt;/span>&lt;span class="n">Let&lt;/span> &lt;span class="n">me&lt;/span> &lt;span class="n">make&lt;/span> &lt;span class="n">an&lt;/span> &lt;span class="n">analogy&lt;/span> &lt;span class="n">between&lt;/span> &lt;span class="n">programs&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">recipes&lt;/span>&lt;span class="err">»&lt;/span> &lt;span class="o">//&lt;/span> &lt;span class="n">Richard&lt;/span> &lt;span class="n">Stallman&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#######################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Some infos about me #&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#######################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">aboutme&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Hello&lt;/span> &lt;span class="o">!&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">I&lt;/span>\&lt;span class="s1">&amp;#39;m a nice guy (that&lt;/span>&lt;span class="se">\&amp;#39;&lt;/span>&lt;span class="s1">s what my mother says) who likes to learn from others and help make the world a better place. &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">I&lt;/span> &lt;span class="n">like&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">feel&lt;/span> &lt;span class="n">useful&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">participate&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">making&lt;/span> &lt;span class="n">people&lt;/span> &lt;span class="n">happy&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Important&lt;/span> &lt;span class="n">thing&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">know&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">I&lt;/span>\&lt;span class="s1">&amp;#39;m always smiling.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">I&lt;/span> &lt;span class="n">have&lt;/span> &lt;span class="n">been&lt;/span> &lt;span class="n">working&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">IT&lt;/span> &lt;span class="n">world&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">over&lt;/span> &lt;span class="n">ten&lt;/span> &lt;span class="n">years&lt;/span> &lt;span class="n">now&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="n">What&lt;/span> &lt;span class="n">great&lt;/span> &lt;span class="n">human&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">technical&lt;/span> &lt;span class="n">adventures&lt;/span>&lt;span class="o">!&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">I&lt;/span> &lt;span class="n">have&lt;/span> &lt;span class="n">worked&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">large&lt;/span> &lt;span class="n">groups&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">small&lt;/span> &lt;span class="n">structures&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">startups&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">with&lt;/span> &lt;span class="n">people&lt;/span> &lt;span class="n">living&lt;/span> &lt;span class="n">less&lt;/span> &lt;span class="n">than&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="n">kilometre&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="n">my&lt;/span> &lt;span class="n">home&lt;/span>&lt;span class="err">…&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">on&lt;/span> &lt;span class="n">other&lt;/span> &lt;span class="n">continents&lt;/span>&lt;span class="o">!&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">I&lt;/span> &lt;span class="n">really&lt;/span> &lt;span class="n">enjoy&lt;/span> &lt;span class="n">learning&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="n">different&lt;/span> &lt;span class="n">cultures&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">share&lt;/span> &lt;span class="n">knowledge&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">anecdotes&lt;/span> &lt;span class="n">with&lt;/span> &lt;span class="n">my&lt;/span> &lt;span class="n">colleagues&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Happiness&lt;/span> &lt;span class="n">is&lt;/span> &lt;span class="n">an&lt;/span> &lt;span class="n">essential&lt;/span> &lt;span class="n">part&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">my&lt;/span> &lt;span class="n">daily&lt;/span> &lt;span class="n">life&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">my&lt;/span> &lt;span class="n">job&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">And&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">talk&lt;/span> &lt;span class="n">less&lt;/span> &lt;span class="n">about&lt;/span> &lt;span class="n">work&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">I&lt;/span> &lt;span class="n">have&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="n">little&lt;/span> &lt;span class="n">cat&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">his&lt;/span> &lt;span class="n">name&lt;/span> &lt;span class="n">is&lt;/span> &lt;span class="s2">&amp;#34;Herr Ludwig Van Chacha&amp;#34;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">be&lt;/span> &lt;span class="n">precise&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">he&lt;/span> &lt;span class="n">easily&lt;/span> &lt;span class="n">get&lt;/span> &lt;span class="n">offended&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="n">cute&lt;/span> &lt;span class="n">dog&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Franz&lt;/span> &lt;span class="n">Chienbert&lt;/span> &lt;span class="o">!&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">I&lt;/span> &lt;span class="n">love&lt;/span> &lt;span class="n">my&lt;/span> &lt;span class="n">girlfriend&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">we&lt;/span> &lt;span class="n">are&lt;/span> &lt;span class="n">getting&lt;/span> &lt;span class="n">married&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">september&lt;/span> &lt;span class="o">!&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">+&lt;/span> &lt;span class="n">sports&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">listening&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">music&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">discovering&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">world&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">eating&lt;/span> &lt;span class="n">well&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">cinema&lt;/span>&lt;span class="o">!&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">I&lt;/span>\&lt;span class="s1">&amp;#39;m looking forward to meet you :)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">##################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Skills section #&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">##################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">skills&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">unix&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">Freebsd&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">RedHat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">forks&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">VoidLinux&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Arch&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Gentoo&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Debian&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="n">forks&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">Nix&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">skills&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">programming&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">Rust&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">REGEX&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Python&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">Django&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">DRF&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Perl&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Golang&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">PHP&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">5.&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">Shell&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Lua&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Yaml&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Toml&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Javascript&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Json&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Html&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">Css&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Jinja2&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">skills&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">technologies&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">Backstage&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Sonarcloud&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Git&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Ansible&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Docker&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Django&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">LXC&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Vmware&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ZFS&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">KVM&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Proxmox&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">OpenVZ&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">OpenStack&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Nutanix&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Zabbix&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Munin&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Nagios&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Shinken&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SQL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Mariadb&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">PostgreSQL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Varnish&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Nginx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Apache&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">HA&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Proxy&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Pfsense&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Juniper&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Openfire&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Logstash&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Elastisearch&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Kibana&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Filebeat&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Swarm&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Kubernetes&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Rancher&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Traefik&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Terraform&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">RabbitMQ&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Redis&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GlusterFS&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">OpsGenie&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Cloud&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Init&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Okta&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ArgoCD&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">CircleCI&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Sops&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Slack&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">skills&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">spirit_organization&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">Agility&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Scrum&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Jira&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Confluence&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">OTRS&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GLPI&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ITIL&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">skills&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">providers&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">DigitalOcean&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">OVH&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">AWS&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GCP&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Online&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Scalway&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">###############&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Experiences #&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">###############&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">Teacher&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">When&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="mi">2024&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">now&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Description&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">Teach&lt;/span> &lt;span class="n">students&lt;/span> &lt;span class="n">how&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">become&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="n">Super&lt;/span> &lt;span class="n">System&lt;/span> &lt;span class="n">Engineer&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="n">st&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="n">nd&lt;/span> &lt;span class="n">grade&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">Caen&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">Altirnao&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Lead&lt;/span> &lt;span class="n">SRE&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">When&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="mi">2024&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">now&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Description&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">Build&lt;/span> &lt;span class="n">on&lt;/span> &lt;span class="n">top&lt;/span> &lt;span class="n">Google&lt;/span> &lt;span class="n">Drive&lt;/span> &lt;span class="n">app&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Missions&lt;/span> &lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">Lead&lt;/span> &lt;span class="n">DevX&lt;/span> &lt;span class="n">engineering&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">Cloud&lt;/span> &lt;span class="n">Platform&lt;/span> &lt;span class="n">engineering&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">Developer&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">Technologies&lt;/span> &lt;span class="n">used&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">Golang&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Python&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Shell&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Terraform&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GCP&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">Payfit&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Engineering&lt;/span> &lt;span class="n">Manager&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">When&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">Sep&lt;/span> &lt;span class="mi">2022&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">Feb&lt;/span> &lt;span class="mi">2023&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Corp&lt;/span> &lt;span class="n">Security&lt;/span> &lt;span class="n">Team&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Devs&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">Automation&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">Security&lt;/span> &lt;span class="n">projects&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Missions&lt;/span> &lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">Lead&lt;/span> &lt;span class="n">technical&lt;/span> &lt;span class="n">roadmap&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">Train&lt;/span> &lt;span class="n">engineering&lt;/span> &lt;span class="n">team&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">Solve&lt;/span> &lt;span class="n">complexe&lt;/span> &lt;span class="n">issue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">Improve&lt;/span> &lt;span class="n">Payfit&lt;/span> &lt;span class="n">security&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">Technologies&lt;/span> &lt;span class="n">used&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">Python&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Shell&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Linux&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Django&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Oauth2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Redis&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Docker&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Aws&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Senior&lt;/span> &lt;span class="n">Software&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">System&lt;/span> &lt;span class="n">Engineer&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">When&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">Sep&lt;/span> &lt;span class="mi">2021&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">Sep&lt;/span> &lt;span class="mi">2022&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Corp&lt;/span> &lt;span class="n">IT&lt;/span> &lt;span class="n">Security&lt;/span> &lt;span class="n">Team&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Devs&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">Security&lt;/span> &lt;span class="n">projects&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">My&lt;/span> &lt;span class="n">project&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">Created&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">developed&lt;/span> &lt;span class="n">Linux&lt;/span> &lt;span class="n">devices&lt;/span> &lt;span class="n">management&lt;/span> &lt;span class="n">system&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">Created&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">developed&lt;/span> &lt;span class="n">mining&lt;/span> &lt;span class="n">blocked&lt;/span> &lt;span class="n">extension&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">Created&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">developed&lt;/span> &lt;span class="n">internal&lt;/span> &lt;span class="n">HRSI&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Fully&lt;/span> &lt;span class="n">automatized&lt;/span> &lt;span class="n">onboarding&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">offboarding&lt;/span> &lt;span class="n">collaborators&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Fully&lt;/span> &lt;span class="n">registered&lt;/span> &lt;span class="n">access&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Distributed&lt;/span> &lt;span class="n">system&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">Technologies&lt;/span> &lt;span class="n">used&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">Python&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Shell&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Linux&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Kubernetes&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ArgoCD&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">CircleCI&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Sops&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Docker&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Mariadb&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Redis&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Javascript&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">OVH&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">R&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">D&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">UNIX&lt;/span> &lt;span class="n">System&lt;/span> &lt;span class="n">Engineer&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">When&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">Feb&lt;/span> &lt;span class="mi">2020&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">Aug&lt;/span> &lt;span class="mi">2021&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">System&lt;/span> &lt;span class="n">Engineer&lt;/span> &lt;span class="n">Team&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Volunteer&lt;/span> &lt;span class="n">as&lt;/span> &lt;span class="n">Oncall&lt;/span> &lt;span class="n">escalation&lt;/span> &lt;span class="n">Oncall&lt;/span> &lt;span class="n">Ops&lt;/span> &lt;span class="n">Team&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Devs&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">integrate&lt;/span> &lt;span class="n">projects&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">My&lt;/span> &lt;span class="n">project&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">New&lt;/span> &lt;span class="n">Rescue&lt;/span> &lt;span class="n">Linux&lt;/span> &lt;span class="n">Kernel&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">TLDR&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">New&lt;/span> &lt;span class="n">patched&lt;/span> &lt;span class="n">Linux&lt;/span> &lt;span class="n">kernel&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">be&lt;/span> &lt;span class="n">used&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">deployed&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">internal&lt;/span> &lt;span class="n">servers&lt;/span> &lt;span class="n">installation&lt;/span> &lt;span class="n">robots&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">Bring&lt;/span> &lt;span class="n">Your&lt;/span> &lt;span class="n">Own&lt;/span> &lt;span class="ne">Image&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">TLDR&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">Bring&lt;/span> &lt;span class="n">Your&lt;/span> &lt;span class="n">Own&lt;/span> &lt;span class="ne">Image&lt;/span> &lt;span class="n">feature&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">BYOI&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">enables&lt;/span> &lt;span class="n">you&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">deploy&lt;/span> &lt;span class="n">cloudready&lt;/span> &lt;span class="n">images&lt;/span> &lt;span class="n">directly&lt;/span> &lt;span class="n">on&lt;/span> &lt;span class="n">your&lt;/span> &lt;span class="n">dedicated&lt;/span> &lt;span class="n">server&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">BAU&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">TLDR&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">Fix&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">improve&lt;/span> &lt;span class="n">our&lt;/span> &lt;span class="n">technologies&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">internal&lt;/span> &lt;span class="n">robots&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Site&lt;/span> &lt;span class="n">Reliability&lt;/span> &lt;span class="n">Engineer&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">When&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">Sep&lt;/span> &lt;span class="mi">2018&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">Jan&lt;/span> &lt;span class="mi">2020&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Dedicated&lt;/span> &lt;span class="n">Operational&lt;/span> &lt;span class="n">BareMetal&lt;/span> &lt;span class="n">Team&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Management&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">control&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">automation&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="o">+&lt;/span>&lt;span class="mi">380&lt;/span>&lt;span class="n">k&lt;/span> &lt;span class="n">servers&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">Oncall&lt;/span> &lt;span class="n">on&lt;/span> &lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Internal&lt;/span> &lt;span class="n">infrastructure&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Delivery&lt;/span> &lt;span class="n">process&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">LoadBalancer&lt;/span> &lt;span class="n">as&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="n">Service&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Private&lt;/span> &lt;span class="n">Network&lt;/span> &lt;span class="n">Vrack&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">International&lt;/span> &lt;span class="n">Teams&lt;/span> &lt;span class="n">Trainer&lt;/span> &lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">US&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">India&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">Project&lt;/span> &lt;span class="n">Leader&lt;/span> &lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Migration&lt;/span> &lt;span class="n">internal&lt;/span> &lt;span class="n">alerting&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">monitoring&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">low&lt;/span> &lt;span class="n">level&lt;/span> &lt;span class="n">driver&lt;/span> &lt;span class="n">development&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">integration&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Monitoring&lt;/span> &lt;span class="n">automation&lt;/span> &lt;span class="n">matrix&lt;/span> &lt;span class="n">integration&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Support&lt;/span> &lt;span class="n">Level&lt;/span> &lt;span class="n">integration&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">oncall&lt;/span> &lt;span class="n">triggers&lt;/span> &lt;span class="n">intergation&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">Technologies&lt;/span> &lt;span class="n">used&lt;/span> &lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">Perl&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Python&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Bash&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Golang&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Internal&lt;/span> &lt;span class="n">tools&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Unix&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Cisco&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Arista&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Windows&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Bonus&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">Nantes&lt;/span> &lt;span class="n">Office&lt;/span> &lt;span class="n">Manager&lt;/span> &lt;span class="n">relay&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">RadioKing&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">CIO&lt;/span> &lt;span class="n">chief&lt;/span> &lt;span class="n">Infrastructure&lt;/span> &lt;span class="n">Officer&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">When&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="mi">2017&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">2018&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">N&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">GDPR&lt;/span> &lt;span class="n">officer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">draw&lt;/span> &lt;span class="n">architecture&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="n">production&lt;/span> &lt;span class="n">environments&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">control&lt;/span> &lt;span class="n">evolution&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">estimate&lt;/span> &lt;span class="n">costs&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">security&lt;/span> &lt;span class="n">test&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">DevOps&lt;/span> &lt;span class="n">Engineer&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">When&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="mi">2017&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Management&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">control&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">automation&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">development&lt;/span> &lt;span class="n">on&lt;/span> &lt;span class="n">Radio&lt;/span>\&lt;span class="s1">&amp;#39;s applications &amp;amp; infrastructures.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Also&lt;/span> &lt;span class="n">worked&lt;/span> &lt;span class="n">on&lt;/span> &lt;span class="n">multiple&lt;/span> &lt;span class="bp">self&lt;/span> &lt;span class="n">deployment&lt;/span> &lt;span class="n">infrastructure&lt;/span>\&lt;span class="s1">&amp;#39;s stack with Terraform.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Technologies&lt;/span> &lt;span class="n">used&lt;/span> &lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">Kubernetes&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Python&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Bash&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Golang&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Ansible&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ELK&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Graylog&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Docker&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Swarm&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Rancher&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Varnish&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Traefik&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Terraform&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ZFS&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Redis&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">RabbitMQ&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Postgres&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">LXC&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GlusterFS&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">ATE&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">DevOps&lt;/span> &lt;span class="n">Engineer&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">When&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="mi">2016&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">2017&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Management&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">control&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">automation&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="mi">3000&lt;/span>&lt;span class="o">+&lt;/span> &lt;span class="n">servers&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Technologies&lt;/span> &lt;span class="n">used&lt;/span> &lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">Python&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Bash&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Ansible&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Vmware&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">PHP&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GLPI&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">FusionInventory&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">System&lt;/span> &lt;span class="n">Engineer&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">When&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="mi">2016&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">Infrastructure&lt;/span>\\&lt;span class="s1">&amp;#39;s pilot of the French Ministry of Education.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Deployment&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">system&lt;/span> &lt;span class="n">configuration&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">RedHat&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">Centos&lt;/span> &lt;span class="n">servers&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Technologies&lt;/span> &lt;span class="n">used&lt;/span> &lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="n">Pfsense&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">HA&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">Proxy&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Nginx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Apache&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Varnish&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Tomcat&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">NFS&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">MariaDB&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">PostGreSQL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Python&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">PHP&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">Python&lt;/span> &lt;span class="n">developer&lt;/span> &lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Creation&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">an&lt;/span> &lt;span class="n">automatic&lt;/span> &lt;span class="n">video&lt;/span> &lt;span class="n">processing&lt;/span> &lt;span class="n">program&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">SFTP&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">NFS4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">FFMPEG&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">Pyinotify&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">Python3&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Creation&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="n">Restful&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">API&lt;/span> &lt;span class="n">with&lt;/span> &lt;span class="n">Bottle&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">Flask&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">Python3&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">PHP&lt;/span> &lt;span class="n">developer&lt;/span> &lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Creation&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="n">web&lt;/span> &lt;span class="n">application&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">managing&lt;/span> &lt;span class="n">ministry&lt;/span> &lt;span class="n">services&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">OVH&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Expert&lt;/span> &lt;span class="n">Technician&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">When&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="mi">2015&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">2016&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Support&lt;/span> &lt;span class="n">Tools&lt;/span> &lt;span class="n">Developer&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Managing&lt;/span> &lt;span class="n">customer&lt;/span> &lt;span class="n">infrastructures&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Architectures&lt;/span> &lt;span class="n">accompaniment&lt;/span> &lt;span class="n">on&lt;/span> &lt;span class="n">creation&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">development&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">evolution&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Specialisation&lt;/span> &lt;span class="n">on&lt;/span> &lt;span class="n">UNIX&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">BSD&lt;/span> &lt;span class="n">Cloud&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">Infrastructure&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Client&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">Support&lt;/span> &lt;span class="n">Documentation&lt;/span> &lt;span class="n">writer&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">###################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># More about me ? #&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">###################&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">whatsunusual&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">I&lt;/span> &lt;span class="n">use&lt;/span> &lt;span class="n">Kinesis&lt;/span> &lt;span class="n">Advantage&lt;/span> &lt;span class="n">keyboard&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">bépo&lt;/span> &lt;span class="n">layout&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">mysport&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">skills&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">English&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">Thai&lt;/span> &lt;span class="n">boxer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Crossfit&lt;/span> &lt;span class="n">trainer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Climbing&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">myworks&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">websites&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lebaron&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sh&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pronostix&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">fr&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Bring Your Own Image</title><link>https://lebaron.sh/p/bring-your-own-image/</link><pubDate>Mon, 20 Jul 2020 12:00:00 +0000</pubDate><guid>https://lebaron.sh/p/bring-your-own-image/</guid><description>&lt;p>When I was working at &lt;strong>OVHCloud&lt;/strong> company, I&amp;rsquo;ve developed a feature called &lt;strong>BYOI&lt;/strong> (Bring Your Own Image).&lt;/p>
&lt;p>&lt;strong>Bring Your Own Image&lt;/strong> technology allows you to boot any cloud (or not) images on a baremetal.&lt;/p>
&lt;p>Even if today not all editors are ready to provide completely agnostic images (and I mean &lt;strong>UEFI&lt;/strong> ready and/or &lt;strong>legacy boot&lt;/strong>), by triturating (&lt;strong>packer&lt;/strong>) a bit the whole, we can have something functional.&lt;/p>
&lt;p>This mark the first step towards the &lt;strong>Hybrid IAC&lt;/strong>.&lt;/p>
&lt;p>&lt;a class="link" href="https://docs.ovh.com/gb/en/dedicated/bringyourownimage/" target="_blank" rel="noopener"
>The documentation is here&lt;/a>&lt;/p>
&lt;p>&lt;strong>What does it really do?&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>API deployment (+automation)&lt;/li>
&lt;li>post-install scripting (+automation)&lt;/li>
&lt;li>transparent installation and system (+security)&lt;/li>
&lt;li>template customization (+security)&lt;/li>
&lt;li>nova boot custom (+tech)&lt;/li>
&lt;/ul>
&lt;p>A little warning, as I said above, not all images are ready to boot automatically yet, there are many bug-tracks opened on different editors because of unwanted behaviors at &lt;strong>boot time&lt;/strong>, &lt;strong>grub config&lt;/strong>, &lt;strong>init phase&lt;/strong> etc&lt;/p>
&lt;p>If you see these errors via a &lt;strong>KVM/IPMI&lt;/strong>, it means that the installation went well, but the sticking point is not the deployment technology itself, but the image installed on the disks.&lt;/p></description></item><item><title>Random wallpaper with AwesomeWM !</title><link>https://lebaron.sh/p/random-wallpaper-with-awesomewm/</link><pubDate>Fri, 10 Jan 2020 11:10:33 +0000</pubDate><guid>https://lebaron.sh/p/random-wallpaper-with-awesomewm/</guid><description>&lt;p>I&amp;rsquo;ve been looking for a way to break my routine a bit when I&amp;rsquo;m working on my laptop. I figured that changing the wallpaper randomly and automatically was a good way to break the monotony.&lt;/p>
&lt;p>I use awesomeWM (version 4)&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">[f00b@void ~]$ awesome --version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">awesome v4.3 (Too long)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> • Compiled against Lua 5.3.5 (running with Lua 5.3)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> • D-Bus support: ✔
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> • execinfo support: ✘
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> • xcb-randr version: 1.6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> • LGI version: 0.9.2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>So I needed three things:&lt;/p>
&lt;ul>
&lt;li>A folder full of images&lt;/li>
&lt;li>A little script that will choose one at random&lt;/li>
&lt;li>A call to this script from awesome init&lt;/li>
&lt;/ul>
&lt;p>For the images, I use &lt;a class="link" href="https://github.com/LukeSmithxyz/wallpapers" target="_blank" rel="noopener"
>the excellent repo&lt;/a> by &lt;strong>Luck Smith&lt;/strong>.&lt;/p>
&lt;p>As far as the script is concerned, nothing too hard:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="c1"># author : lebarondecharlus&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># descr : Make your wallpaper change on each start !&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># I&amp;#39;m using Luck Smith wallpaper git repo for all images&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># link : https://github.com/LukeSmithxyz/wallpapers&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># current awesome theme&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">THEME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;powerarrow-dark&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Awesome conf path&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">AWPATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$HOME&lt;/span>&lt;span class="s2">/.config/awesome/themes/&lt;/span>&lt;span class="nv">$THEME&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># image should have absolute path to image folder&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">IMAGE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>find &lt;span class="nv">$HOME&lt;/span>/Pictures/wallpapers/ -type f -name &lt;span class="s2">&amp;#34;*.png&amp;#34;&lt;/span> -o -name &lt;span class="s2">&amp;#34;*.jpeg&amp;#34;&lt;/span> -o -name &lt;span class="s2">&amp;#34;*.jpg&amp;#34;&lt;/span>&lt;span class="p">|&lt;/span> shuf -n &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> sed &lt;span class="s1">&amp;#39;s/\ /\\ /g&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cp -f &lt;span class="nv">$IMAGE&lt;/span> &lt;span class="nv">$AWPATH&lt;/span>/wall.png
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># don&amp;#39;t forget to add those lines at the end of your rc.lua (replace with your correct path and script name)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -- Startup programs&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># awful.util.spawn_with_shell(&amp;#34;~/bin/wallpaper.sh&amp;#34;)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>As indicated in comment, just add these two lines (or just one without the comment) to call the script via awesomeWM init.&lt;/p>
&lt;p>Put this at the end of &lt;code>~/.config/awesome/rc.lua&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">-- Startup programs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">awful.util.spawn_with_shell(&amp;#34;~/bin/wallpaper.sh&amp;#34;)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>On each awesomewm restart, you will have a new pretty (or not) wallpaper.&lt;/p>
&lt;p>&lt;a class="link" href="https://gist.github.com/lebarondecharlus/785796c5e4e37a4d759f0f8c89c41f0e" target="_blank" rel="noopener"
>Script is on gist !&lt;/a>&lt;/p></description></item><item><title>Freebsd Pci Disk Space</title><link>https://lebaron.sh/p/freebsd-pci-disk-space/</link><pubDate>Sun, 04 Mar 2018 14:56:33 +0000</pubDate><guid>https://lebaron.sh/p/freebsd-pci-disk-space/</guid><description>&lt;p>When you create an OVH Public Cloud instance under Freebsd with a certain amount of disk space, let’s say 50G, you will find that it is not applied on your partition.&lt;/p>
&lt;p>First let&amp;rsquo;s look at what we have:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># gpart show
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">=&amp;gt; 40 10239920 da0 GPT (50G) [CORRUPT]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 40 1024 1 freebsd-boot (512K)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1064 984 - free - (492K)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 2048 10235904 2 freebsd-zfs (4.9G)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 10237952 2008 - free - (1.0M)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>We note that our volume da0 is tagged as CORRUPT. Don&amp;rsquo;t panic, everyone knows that the Freebsd handbook is great. I quote:&lt;/p>
&lt;blockquote>
&lt;p>If the disk was formatted with the GPT partitioning scheme, it may show as “corrupted” because the GPT backup partition table is no longer at the end of the drive. Fix the backup partition table with gpart:&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># gpart recover ada0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ada0 recovered
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Well, let&amp;rsquo;s apply this to our server by replacing &lt;code>ada0&lt;/code> by &lt;code>da0&lt;/code> :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># gpart recover da0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">da0 recovered
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Check :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># gpart show
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">=&amp;gt; 40 104857520 da0 GPT (50G)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 40 1024 1 freebsd-boot (512K)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1064 984 - free - (492K)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 2048 10235904 2 freebsd-zfs (4.9G)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 10237952 94619608 - free - (45G)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Much better!
We see that our da0 &amp;ldquo;disk&amp;rdquo; has 50G. However if we look more closely at our system, we see that not all the space is present.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># df -h
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Filesystem Size Used Avail Capacity Mounted on
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">zroot/ROOT/default 4.7G 493M 4.2G 10% /
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">devfs 1.0K 1.0K 0B 100% /dev
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">zroot 4.2G 96K 4.2G 0% /zroot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Once again, don&amp;rsquo;t panic. The handbook is our friend.&lt;/p>
&lt;p>Let&amp;rsquo;s apply the 45G free on our score :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># gpart resize -i 2 -a 4k -s 50G da0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">da0p2 resized
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Check :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># gpart show
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">=&amp;gt; 40 104857520 da0 GPT (50G)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 40 1024 1 freebsd-boot (512K)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1064 984 - free - (492K)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 2048 94371840 2 freebsd-zfs (45G)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 94373888 10483672 - free - (5.0G)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Well, we are moving forward, however, the space is not yet usable as the return from df :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># df -h
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Filesystem Size Used Avail Capacity Mounted on
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">zroot/ROOT/default 4.7G 493M 4.2G 10% /
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">devfs 1.0K 1.0K 0B 100% /dev
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">zroot 4.2G 96K 4.2G 0% /zroot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>We must ask to our zpool to use this space.&lt;/p>
&lt;p>Let’s first check our pool.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># zpool status
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> pool: zroot
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> state: ONLINE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> scan: none requested
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">config:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> NAME STATE READ WRITE CKSUM
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> zroot ONLINE 0 0 0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> da0p2 ONLINE 0 0 0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Ask it we want to autoexpand on zroot&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># zpool set autoexpand=on zroot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Apply it on da0p2 :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># zpool online -e zroot /dev/da0p2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Last check :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># df -h
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Filesystem Size Used Avail Capacity Mounted on
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">zroot/ROOT/default 44G 493M 43G 1% /
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">devfs 1.0K 1.0K 0B 100% /dev
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">zroot 43G 96K 43G 0% /zroot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>This is it !&lt;/p></description></item><item><title>Ubuntu Vrack Ovh Fix</title><link>https://lebaron.sh/p/ubuntu-vrack-ovh-fix/</link><pubDate>Sun, 04 Mar 2018 14:41:25 +0000</pubDate><guid>https://lebaron.sh/p/ubuntu-vrack-ovh-fix/</guid><description>&lt;p>You may have noticed it, but when you populate a PCI OVH instance under Ubuntu by activating Vrack, your Vm does not have its private IP at boot time.
So, yes, I don&amp;rsquo;t like Ubuntu, but sometimes you don&amp;rsquo;t have a choice.&lt;/p>
&lt;p>Anyway, all this to say that we don&amp;rsquo;t have our private IP and it&amp;rsquo;s too sad. (RT)&lt;/p>
&lt;p>The fix trick is stupid.
Very stupid.&lt;/p>
&lt;p>Add:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">allow-hotplug ens4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">iface ens4 inet dhcp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>In &lt;code>/etc/network/interface&lt;/code> file.&lt;/p>
&lt;p>Then :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">systemctl restart network
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>and&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ifup ens4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>That’s it&lt;/p>
&lt;p>I’ve sent an email on OVH&amp;rsquo;s ML [cloud], because I still found it strange that this bug still exists.&lt;/p>
&lt;p>It was on 21 November 2017.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Hello la team,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Juste une petite remarque sur l&amp;#39;installation d&amp;#39;un Ubuntu PCI avec Vrack.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">En fait je suis obligé d&amp;#39;ajouter :
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">allow-hotplug ens4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">iface ens4 inet dhcp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Dans /etc/network/interface puis
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl restart network
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">et
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ifup ens4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Il me semble que sur les autres distrib&amp;#39; les confs network s&amp;#39;ajoutent automatiquement à l&amp;#39;install non ?
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Je passe peut-être à côté d&amp;#39;un truc... en même temps je ne connais pas bien les systèmes en .deb...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Bises à tout le monde
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">F00b4rch
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Answer :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">21/11/2017
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">À cloud
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Hello,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Exact, sur debian 9 (voir 8), les interfaces sont montée automatiquement...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Je crois qu&amp;#39;il a un bug d&amp;#39;ouvert cote ubuntu pour ça, si je le retrouve je te l&amp;#39;envoi.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Add Gitlab Registry in Kubernetes</title><link>https://lebaron.sh/p/add-gitlab-registry-in-kubernetes/</link><pubDate>Thu, 10 Aug 2017 12:06:05 +0000</pubDate><guid>https://lebaron.sh/p/add-gitlab-registry-in-kubernetes/</guid><description>&lt;p>Now that Gitlab offers its own image registry, it is possible to use it directly in our K8s environment!
If you missed the info (which is starting to date now), I refer you to &lt;a class="link" href="https://about.gitlab.com/2016/05/23/gitlab-container-registry/" target="_blank" rel="noopener"
>this article&lt;/a>.&lt;/p>
&lt;p>To add the Gitlab private registry in Kubernetes you have to create a secret :&lt;/p>
&lt;pre>&lt;code>&amp;gt; kubectl create secret docker-registry regsecret --docker-server=registry.gitlab.xyz --docker-username='' --docker-password='' --docker-email=&amp;quot;&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>Where :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">--docker-server regitry gitlab
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--docker-username user gitlab autorisé à acceder au registry
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--docker-password son mot de passe
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--docker-email son email
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>We will check secret creation :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;gt; kubectl get secret regsecret
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">NAME TYPE DATA AGE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">regsecret kubernetes.io/dockercfg 1 19h
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Show details :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;gt; kubectl get secret regsecret --output=yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apiVersion: v1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">data:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> .dockercfg: eyJiXXXXXXteoirutXXXXetusrnXX=
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kind: Secret
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">metadata:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> creationTimestamp: 2017-08-07T13:32:09Z
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> name: regsecret
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> namespace: default
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> resourceVersion: &amp;#34;2783&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> selfLink: /api/v1/namespaces/default/secrets/regsecret
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> uid: cfeXXXb7-7b74-XXX-XXX907-4iu8237492
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">type: kubernetes.io/dockercfg
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>It’s now possible to use images from your registry directly in your &lt;code>deployment&lt;/code>.&lt;/p>
&lt;p>Example&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">apiVersion: apps/v1beta1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kind: Deployment
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">metadata:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> name: test-registry
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">spec:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> replicas: 3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> template:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> metadata:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> labels:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> app: my-app
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> version: v1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> spec:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> containers:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: my-app
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> image: registry.gitlab.xyz/images/my-app:latest
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> imagePullPolicy: Always
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ports:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - containerPort: 80
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> imagePullSecrets:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: regsecret
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>See where we call &lt;code>secret&lt;/code> :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">imagePullSecrets:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: regsecret
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Enjoy !&lt;/p></description></item><item><title>Dockerize Nova client</title><link>https://lebaron.sh/p/dockerize-nova-client/</link><pubDate>Tue, 08 Aug 2017 13:52:07 +0000</pubDate><guid>https://lebaron.sh/p/dockerize-nova-client/</guid><description>&lt;p>With OVH Public Cloud, it is possible for you to control your OpenStack instances directly from the Nova client.&lt;/p>
&lt;p>It is rather practical to go through the command line rather than having to access the manager which is often, let us say it, slow.&lt;/p>
&lt;p>But to avoid having to prepare each time a working environment compatible with Nova, I find more interesting to directly create a Docker image for this purpose.
In this way, no more need to install anything except the Docker daemon on its workstation.&lt;/p>
&lt;p>The DockerFile looks like :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">FROM debian:latest
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">RUN apt-get update &amp;amp;&amp;amp; \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> apt-get install -y \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> python-glanceclient \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> python-novaclient
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">env OS_AUTH_URL=&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">env OS_TENANT_ID=&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">env OS_TENANT_NAME=&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">env OS_USERNAME=&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">env OS_PASSWORD=&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">env OS_REGION_NAME=&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Note that I use the basic debian image because I already have it locally, but you can replace the bone with the one you want and adapt the content of RUN.&lt;/p>
&lt;p>You also need to fill the environment variables with information about your OpenStack env.&lt;/p>
&lt;p>Let’s go with :&lt;/p>
&lt;pre>&lt;code>sudo docker build -t clientNova .
&lt;/code>&lt;/pre>
&lt;p>Then run your container as follow :&lt;/p>
&lt;pre>&lt;code>sudo docker run --rm -it novaClient bash
&lt;/code>&lt;/pre>
&lt;p>You can add alias to your &lt;code>.bashrc&lt;/code> / &lt;code>.zshrc&lt;/code>&lt;/p>
&lt;pre>&lt;code>alias nova=&amp;quot;sudo docker run --rm -it novaClient bash&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>&lt;a class="link" href="https://github.com/lebarondecharlus/SandBox/tree/master/Docker/OpenStack/novaClient" target="_blank" rel="noopener"
>Sources are available&lt;/a> !&lt;/p>
&lt;p>Enjoy !&lt;/p></description></item><item><title>Setup Rancher cluster on OVH Public Cloud</title><link>https://lebaron.sh/p/setup-rancher-cluster-on-ovh-public-cloud/</link><pubDate>Fri, 04 Aug 2017 19:04:11 +0000</pubDate><guid>https://lebaron.sh/p/setup-rancher-cluster-on-ovh-public-cloud/</guid><description>&lt;p>&lt;img src="https://lebaron.sh/Images/rancher_logo.jpeg"
loading="lazy"
alt="Rancher logo"
>&lt;/p>
&lt;p>The world of hosting is changing, and so is the world of application development. Today we are turning less and less to dedicated hosting for a single application, but more to build the infrastructure that will support it.&lt;/p>
&lt;p>In this sense, we prefer to use an Iaas solution on dedicated &amp;ldquo;bare metal&amp;rdquo; for our application overlay than pure &amp;ldquo;bare metal&amp;rdquo; per service.&lt;/p>
&lt;p>Application deployment missions pushed by developers must fit with the technology and logic of production. Which &lt;code>pipelines&lt;/code> should we use for our &lt;code>CI&lt;/code>, &lt;code>CD&lt;/code> ?&lt;/p>
&lt;p>This post will not aim at answering the question of the pipelines to be implemented, it will be a question of &lt;code>Ranching&lt;/code>, coupled with its &lt;code>Cattle&lt;/code> orchestrator, on Public Cloud OVH &lt;code>Openstack&lt;/code>.&lt;/p>
&lt;h3 id="installation-">Installation :
&lt;/h3>&lt;p>The installation of &lt;code>PCI&lt;/code> (Public Cloud) instances is the fastest step. We need to start with 5 instances:&lt;/p>
&lt;ul>
&lt;li>1 LoadBalancer/ReverseProxy (&lt;code>HA-Proxy&lt;/code> or &lt;code>Nginx&lt;/code>) for €299&lt;/li>
&lt;li>3 RancherServer in Cluster under &lt;code>Galera&lt;/code> at 5€99&lt;/li>
&lt;li>1 Node Worker (for our applications) at the price you want to put for your performance&lt;/li>
&lt;/ul>
&lt;br>
#### LoadBalancer Nginx :
&lt;p>For Nginx installation, nothing very complex, a €2.99 instance will be more than enough since the only job of the server will be to forward the request to our rancher cluster.&lt;/p>
&lt;p>The conf file will be :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">upstream rancher {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> server rancher-server1:8080;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> server rancher-server2:8080;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> server rancher-server3:8080;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">map $http_upgrade $connection_upgrade {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> default Upgrade;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#39;&amp;#39; close;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">server {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> listen 443 ssl spdy;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> server_name &amp;lt;server&amp;gt;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ssl_certificate &amp;lt;cert_file&amp;gt;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ssl_certificate_key &amp;lt;key_file&amp;gt;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> location / {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_set_header Host $host;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_set_header X-Forwarded-Proto $scheme;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_set_header X-Forwarded-Port $server_port;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_pass http://rancher;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_http_version 1.1;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_set_header Upgrade $http_upgrade;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_set_header Connection $connection_upgrade;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proxy_read_timeout 900s;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">server {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> listen 80;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> server_name &amp;lt;server&amp;gt;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> return 301 https://$server_name$request_uri;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Replace the &lt;code>upstream&lt;/code> by the ips of your servers.&lt;/p>
&lt;p>Note that it is also possible to dockerize this service. This way, the day you put a second LB on the front end, there will only be one container to place on your instance.&lt;/p>
&lt;h4 id="rancher-installation-">Rancher installation :
&lt;/h4>&lt;p>For Rancher part, there are no great difficulties either. 5€99 instances will be more than enough for the needs.&lt;/p>
&lt;p>I recommend the &lt;a class="link" href="http://rancher.com/docs/rancher/v1.0/en/installing-rancher/installing-server/multi-nodes/" target="_blank" rel="noopener"
>official Rancher documentation&lt;/a> on this subject.&lt;/p>
&lt;p>We will start by deploying on each Rancher server:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo docker run -d --restart=unless-stopped -p 8080:8080 rancher/server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Then we will add the servers to each other via the UI. (Infrastructure &amp;gt; Hosts &amp;gt; Add Host)&lt;/p>
&lt;p>You should get the following code to run on each node :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">docker&lt;/span> &lt;span class="n">run&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">e&lt;/span> &lt;span class="n">CATTLE_AGENT_IP&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;1.2.3.4&amp;#34;&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">e&lt;/span> &lt;span class="n">CATTLE_HOST_LABELS&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;galera=true&amp;#39;&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">rm&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">privileged&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">v&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="k">var&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">run&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">docker&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sock&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="k">var&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">run&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">docker&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sock&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">v&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="k">var&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">rancher&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="k">var&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">rancher&lt;/span> &lt;span class="n">rancher&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">agent&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">v1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mf">2.5&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="mf">1.2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mf">3.4&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">8080&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">v1&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">scripts&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">4956918455&lt;/span>&lt;span class="n">D4D9BE3AF1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">1483142400000&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">Fscj9CvRSrx0mS05E4kdWDkb0E&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Once this step is done, it will then be possible to use the &lt;code>Galera&lt;/code> image proposed by Rancher (in the catalog) on our 3 servers.
A node will then be present on each server.&lt;/p>
&lt;p>We will be able to initialize the cluster on a Galera node:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;gt; CREATE DATABASE IF NOT EXISTS cattle COLLATE = &amp;#39;utf8_general_ci&amp;#39; CHARACTER SET = &amp;#39;utf8&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt; GRANT ALL ON cattle.* TO &amp;#39;cattle&amp;#39;@&amp;#39;%&amp;#39; IDENTIFIED BY &amp;#39;cattle&amp;#39;;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt; GRANT ALL ON cattle.* TO &amp;#39;cattle&amp;#39;@&amp;#39;localhost&amp;#39; IDENTIFIED BY &amp;#39;cattle&amp;#39;;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Then check on the other two servers that the basic entries are also present.&lt;/p>
&lt;p>Then let&amp;rsquo;s stop one Rancher server and start it using Galera for persistence of its data :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo docker run -d --restart=unless-stopped -p 8080:8080 rancher/server \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --db-host myhost.example.com --db-port 3306 --db-user username --db-pass password --db-name cattle
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Where :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">--db-host IP du serveur MySQL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--db-port port du serveur MySQL (default: 3306)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--db-user username MySQL login (default: cattle)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--db-pass password MySQL login (default: cattle)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--db-name nom de la base MySQL (default: cattle)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Do the same for the other two servers so each Rancher launches using the Galera database.&lt;/p>
&lt;p>Expected result:
&lt;img src="https://lebaron.sh/Images/RancherGalera.png"
loading="lazy"
alt="Galera Rancher"
>&lt;/p>
&lt;p>It is possible to check if Rancher is &lt;code>clustered&lt;/code> via the UI in: Admin &amp;gt; High Availability.&lt;/p>
&lt;h4 id="addition-of-worker-nodes">Addition of Worker Nodes.
&lt;/h4>&lt;p>You now have your &lt;code>Rancher&lt;/code> cluster with a front-end LB, it is now possible to add &lt;code>Worker&lt;/code> nodes to your cluster.
It&amp;rsquo;s very easy to add them directly with the Rancher utility. Now it&amp;rsquo;s up to you to see which type of instance best suits your resource needs.&lt;/p>
&lt;p>Rancher&amp;rsquo;s default environment uses the &lt;code>Cattle' orchestrator, so once your Workers nodes are configured, you can deploy your &lt;/code>Docker&amp;rsquo; containers directly from your cluster.&lt;/p>
&lt;h3 id="conclusion">Conclusion
&lt;/h3>&lt;p>The installation of a Rancher environment is fast, the Public Cloud OVH allows to quickly deploy the necessary instances of Rancher.
The ease of use offered by the Rancher/Cattle duo allows an efficient and fluid commissioning.&lt;/p>
&lt;p>We will see in a next article how to set up an HA environment with &lt;code>Kubernetes&lt;/code>, still under the OVH PCI and using the environment template proposed by Rancher.&lt;/p></description></item><item><title>Online servers availability</title><link>https://lebaron.sh/p/online-servers-availability/</link><pubDate>Tue, 01 Aug 2017 09:40:07 +0000</pubDate><guid>https://lebaron.sh/p/online-servers-availability/</guid><description>&lt;p>We need servers at Online, but there is no availability!
So they came to ask me if I didn&amp;rsquo;t have a magic solution&amp;hellip;&lt;/p>
&lt;p>A little &lt;code>bash&lt;/code>&amp;hellip; a &lt;code>notify&lt;/code> in this case &lt;code>Slack&lt;/code> and here we go!&lt;br>
As usual &lt;a class="link" href="https://github.com/lebarondecharlus/OnlineSrvDispo" target="_blank" rel="noopener"
>sources are available&lt;/a>.&lt;/p>
&lt;h4 id="dirty-way">Dirty way
&lt;/h4>&lt;p>*To be alerted via slack you have to create an &lt;a class="link" href="https://my.slack.com/services/new/incoming-webhook/" target="_blank" rel="noopener"
>incoming-webhook&lt;/a> which will generate a link.&lt;/p>
&lt;p>For an XC 2016 series server:&lt;/p>
&lt;pre>&lt;code>text=&amp;quot;DISPO : https://www.online.net/fr/serveur-dedie/dedibox-xc&amp;quot;; json=&amp;quot;{\&amp;quot;channel\&amp;quot;: \&amp;quot;#infra\&amp;quot;, \&amp;quot;text\&amp;quot;: \&amp;quot;$text\&amp;quot;}&amp;quot; ; while true ; do curl --silent https://www.online.net/fr/serveur-dedie | grep '&amp;lt;button class=&amp;quot;btn btn--primary js-order-dedibox&amp;quot;' | grep -i 'xc 2016' | grep -i 'victime' || curl -s -d &amp;quot;payload=$json&amp;quot; &amp;quot;https://hooks.slack.com/services/XXX/XXXX/XXXX/XXXX&amp;quot; ; sleep 5 ; done
&lt;/code>&lt;/pre>
&lt;p>Curl will be done only if one server is available.&lt;/p>
&lt;h4 id="clean-way">Clean way
&lt;/h4>&lt;p>Just code formating :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">webhook&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;https://hooks.slack.com/services/XXX/XXXX/XXXX/XXXX&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">url&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;https://www.online.net/fr/serveur-dedie/XXXXX&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;DISPO : &lt;/span>&lt;span class="nv">$url&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">channel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;test&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">json&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;{\&amp;#34;channel\&amp;#34;: \&amp;#34;#&lt;/span>&lt;span class="nv">$channel&lt;/span>&lt;span class="s2">\&amp;#34;, \&amp;#34;text\&amp;#34;: \&amp;#34;&lt;/span>&lt;span class="nv">$text&lt;/span>&lt;span class="s2">\&amp;#34;}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">server&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;XC 2016&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">do&lt;/span> curl --silent https://www.online.net/fr/serveur-dedie &lt;span class="p">|&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> grep &lt;span class="s1">&amp;#39;&amp;lt;button class=&amp;#34;btn btn--primary js-order-dedibox&amp;#34;&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> grep -i &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$server&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> grep -i &lt;span class="s1">&amp;#39;victime&amp;#39;&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> curl -s -d &lt;span class="s2">&amp;#34;payload=&lt;/span>&lt;span class="nv">$json&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$webhook&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> sleep &lt;span class="m">5&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>&lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You can also push the vice further by filtering on the &lt;strong>region&lt;/strong> and the &lt;strong>disc types&lt;/strong>.&lt;/p>
&lt;h4 id="pig-mode">Pig mode
&lt;/h4>&lt;p>Because&amp;hellip; why not ?&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;DISPO https://www.online.net/fr/serveur-dedie/dedibox-xc&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">json&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;{&lt;/span>&lt;span class="se">\&amp;#34;&lt;/span>&lt;span class="s2">channel&lt;/span>&lt;span class="se">\&amp;#34;&lt;/span>&lt;span class="s2">: &lt;/span>&lt;span class="se">\&amp;#34;&lt;/span>&lt;span class="s2">#test&lt;/span>&lt;span class="se">\&amp;#34;&lt;/span>&lt;span class="s2">, &lt;/span>&lt;span class="se">\&amp;#34;&lt;/span>&lt;span class="s2">text&lt;/span>&lt;span class="se">\&amp;#34;&lt;/span>&lt;span class="s2">: &lt;/span>&lt;span class="se">\&amp;#34;&lt;/span>&lt;span class="s2">$text&lt;/span>&lt;span class="se">\&amp;#34;&lt;/span>&lt;span class="s2">}&amp;#34;&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="k">while&lt;/span> &lt;span class="bp">true&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="n">curl&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">silent&lt;/span> &lt;span class="n">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="n">www&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">online&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">net&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">fr&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">serveur&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">dedie&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">dedibox&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">xc&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">egrep&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">io&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;option value=&amp;#34;\w+&amp;#34;&amp;gt;ssd / france / dc2&amp;lt;/option&amp;gt;&amp;#39;&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">curl&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">s&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">d&lt;/span> &lt;span class="s2">&amp;#34;payload=$json&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;https://hooks.slack.com/services/XXX/XXXX/XXXX&amp;#34;&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="n">sleep&lt;/span> &lt;span class="mi">5&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="n">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Next step, simulate an order ?&lt;/p></description></item><item><title>Migrate Openvz To Lxc</title><link>https://lebaron.sh/p/migrate-openvz-to-lxc/</link><pubDate>Mon, 31 Jul 2017 18:15:50 +0000</pubDate><guid>https://lebaron.sh/p/migrate-openvz-to-lxc/</guid><description>&lt;p>I recently had to migrate containers from a proxmox3 (under OpenVZ) to a proxmox4 (under LXC).&lt;/p>
&lt;p>Problem, there are a lot of containers to migrate/&amp;ldquo;convert&amp;rdquo; to run under LXC. So I needed a way to automate the procedure as much as possible.&lt;/p>
&lt;p>Luckily, the &lt;a class="link" href="https://pve.proxmox.com/wiki/Convert_OpenVZ_to_LXC" target="_blank" rel="noopener"
>migration documentation&lt;/a> is very well detailed. So I used it to &amp;ldquo;bash&amp;rdquo; the operation.&lt;/p>
&lt;p>You can find all the sources on my &lt;a class="link" href="https://github.com/lebarondecharlus/vz2lxc" target="_blank" rel="noopener"
>github&lt;/a>&lt;/p>
&lt;p>I cut the operation under two scripts, an export script and an import script.&lt;/p>
&lt;h4 id="the-export-">The export :
&lt;/h4>&lt;p>The export script takes two parameters as input: &lt;code>the container ID&lt;/code> and &lt;code>the IP&lt;/code> of the destination server.&lt;/p>
&lt;p>It is also necessary to define some variables that will be used to send data via &lt;code>scp&lt;/code>.&lt;/p>
&lt;p>The &lt;em>export&lt;/em> procedure is done as follows:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># Stop &amp;amp; Dump
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo vzctl stop $ID &amp;amp;&amp;amp; \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> echo &amp;#34;$ID stopped [OK]&amp;#34; &amp;amp;&amp;amp; \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sudo vzdump $ID -dumpdir /home/$USER/vzdump &amp;amp;&amp;amp; \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> echo &amp;#34;$ID : dump [OK]&amp;#34; &amp;amp;&amp;amp; \
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>We check dump is present :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># DumpName
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">vzDumpName=$(ls /home/$USER/vzdump/)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">if [ -z $vzDumpName ] ; then
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> echo &amp;#34;No dump found in /home/$USER/vzdump/&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> exit
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fi
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Then we send it to &lt;code>Proxmox 4&lt;/code> :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo scp -i /home/$USER/.ssh/id_rsa &amp;#34;-P $rPort&amp;#34; $vzDumpName $rUSER@$rIP:$rPath &amp;amp;&amp;amp; \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> echo &amp;#34;Sending Dump [OK]&amp;#34; &amp;amp;&amp;amp; \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sudo scp -i /home/$USER/.ssh/id_rsa &amp;#34;-P $rPort&amp;#34; vz.log $rUSER@$rIP:$rPath &amp;amp;&amp;amp; \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> echo &amp;#34;Sending Log [OK]&amp;#34; &amp;amp;&amp;amp; \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sudo rm $vzDumpName &amp;amp;&amp;amp; \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sudo rm vz.log &amp;amp;&amp;amp; \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> echo &amp;#34;SCP $vzDumpName on $rIP [OK]&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="import-">Import :
&lt;/h4>&lt;p>As for the import, only one argument is passed as input, which is the container&amp;rsquo;s &amp;ldquo;ID&amp;rdquo;.&lt;/p>
&lt;p>Then we start the &lt;strong>conversion&lt;/strong> and &lt;strong>restoration&lt;/strong> part.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo pct restore $ID $dumpPath/$dumpName &amp;amp;&amp;amp; \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> echo &amp;#34;pct $ID restoring [OK]&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># At this poin, you can set network configuration
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># exemple : pct set 101 -net0 name=eth0,bridge=vmbr0,ip=192.168.15.144/24,gw=192.168.15.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># I prefer doing it manually
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo pct start $ID
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo pct enter $ID
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>I omitted to tell you that there is a small logging system for the operations in order to be able to trace the process a bit.&lt;/p></description></item><item><title>Additional Volume Public Cloud Ovh</title><link>https://lebaron.sh/p/additional-volume-public-cloud-ovh/</link><pubDate>Mon, 31 Jul 2017 11:38:18 +0000</pubDate><guid>https://lebaron.sh/p/additional-volume-public-cloud-ovh/</guid><description>&lt;p>123 To add an additional disk/volume on your OVH public cloud, you need to follow some steps.&lt;/p>
&lt;p>First, identify your new disk :&lt;/p>
&lt;pre>&lt;code>fdisk -l
&lt;/code>&lt;/pre>
&lt;p>You can have different output depending of your system (&lt;code>sd{x}&lt;/code>, &lt;code>vd{x}&lt;/code>).&lt;/p>
&lt;p>Then create a new partition :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># parted /dev/{{disk}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mktable gpt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkpart primary ext4 512 100%
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">quit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Format it :&lt;/p>
&lt;pre>&lt;code>mkfs -t ext4 -L rootfs /dev/{{disk}}1
&lt;/code>&lt;/pre>
&lt;p>Mount :&lt;/p>
&lt;pre>&lt;code>mount /dev/{{disk}}1 /mnt
&lt;/code>&lt;/pre>
&lt;p>Let’s make it peristent, we need &lt;strong>UUID&lt;/strong>.
To get block ID.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># blkid
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/dev/sdb1: LABEL=&amp;#34;rootfs&amp;#34; UUID=&amp;#34;6b75bbb4-b311-4b9d-a8fd-6e6ff23c401f&amp;#34; TYPE=&amp;#34;ext4&amp;#34; PARTLABEL=&amp;#34;primary&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PARTUUID=&amp;#34;e20dc227-9d10-41c4-a714-2fb53d190c11&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/dev/sda1: UUID=&amp;#34;9abb590f-8a5e-496f-ad2a-2c877415bdc5&amp;#34; TYPE=&amp;#34;ext4&amp;#34; PARTUUID=&amp;#34;71036eb1-01&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Add it on &lt;code>/etc/fstab&lt;/code> file with mount information.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># vim /etc/fstab
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[...]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">UUID=6b75bbb4-b311-4b9d-a8fd-6e6ff23c401f /mnt ext4 errors=remount-ro,discard 0 1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Confirm good configuration with one reboot.&lt;/p></description></item><item><title>Additional Volume Public Cloud Ovh</title><link>https://lebaron.sh/projects/hello/</link><pubDate>Mon, 31 Jul 2017 11:38:18 +0000</pubDate><guid>https://lebaron.sh/projects/hello/</guid><description>&lt;p>To add an additional disk/volume on your OVH public cloud, you need to follow some steps.&lt;/p>
&lt;p>First, identify your new disk :&lt;/p>
&lt;pre>&lt;code>fdisk -l
&lt;/code>&lt;/pre>
&lt;p>You can have different output depending of your system (&lt;code>sd{x}&lt;/code>, &lt;code>vd{x}&lt;/code>).&lt;/p>
&lt;p>Then create a new partition :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># parted /dev/{{disk}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mktable gpt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkpart primary ext4 512 100%
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">quit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Format it :&lt;/p>
&lt;pre>&lt;code>mkfs -t ext4 -L rootfs /dev/{{disk}}1
&lt;/code>&lt;/pre>
&lt;p>Mount :&lt;/p>
&lt;pre>&lt;code>mount /dev/{{disk}}1 /mnt
&lt;/code>&lt;/pre>
&lt;p>Let’s make it peristent, we need &lt;strong>UUID&lt;/strong>.
To get block ID.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># blkid
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/dev/sdb1: LABEL=&amp;#34;rootfs&amp;#34; UUID=&amp;#34;6b75bbb4-b311-4b9d-a8fd-6e6ff23c401f&amp;#34; TYPE=&amp;#34;ext4&amp;#34; PARTLABEL=&amp;#34;primary&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PARTUUID=&amp;#34;e20dc227-9d10-41c4-a714-2fb53d190c11&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/dev/sda1: UUID=&amp;#34;9abb590f-8a5e-496f-ad2a-2c877415bdc5&amp;#34; TYPE=&amp;#34;ext4&amp;#34; PARTUUID=&amp;#34;71036eb1-01&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Add it on &lt;code>/etc/fstab&lt;/code> file with mount information.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># vim /etc/fstab
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[...]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">UUID=6b75bbb4-b311-4b9d-a8fd-6e6ff23c401f /mnt ext4 errors=remount-ro,discard 0 1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Confirm good configuration with one reboot.&lt;/p></description></item><item><title>Galera Monitoring</title><link>https://lebaron.sh/p/galera-monitoring/</link><pubDate>Sun, 30 Jul 2017 15:08:41 +0000</pubDate><guid>https://lebaron.sh/p/galera-monitoring/</guid><description>&lt;p>Monitoring a database in standalone mode is one thing, but when it comes to clustering, it&amp;rsquo;s a little more complex.&lt;/p>
&lt;p>This is the case with Galera clustering (mariaDB/mysql). Zabbix (&amp;amp;co) offered me simple solutions for single database servers, but I didn&amp;rsquo;t find a really interesting template for monitoring a Galera cluster for production.&lt;/p>
&lt;p>So several questions, what to monitor, how to alert, what&amp;rsquo;s the best method?&lt;/p>
&lt;p>I based myself on &lt;a class="link" href="http://galeracluster.com/documentation-webpages/monitoringthecluster.html" target="_blank" rel="noopener"
>the official Galera documentation&lt;/a> to have all the important elements to monitor.
For the choice of the Golang language, it seemed to me that it provided me with the necessary functionalities.
As for the choice of alerting, I decided to use a Slack App.&lt;/p>
&lt;p>You can find the &lt;a class="link" href="https://github.com/lebarondecharlus/GaleraMonitoring" target="_blank" rel="noopener"
>sources of my project here&lt;/a>.&lt;/p>
&lt;p>Example of a healthy output :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;gt; go run main.go
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">### Version ####
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2017/06/16 14:19:48 Serveur n1 - version 5.6.35-1xenial
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2017/06/16 14:19:48 Serveur n2 - version 5.6.35-1xenial
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2017/06/16 14:19:48 Serveur n3 - version 5.6.35-1xenial
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">### UUID ###
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2017/06/16 14:19:48 n1 a1c404a9-51b4-11e7-b057-237cc5970d38
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2017/06/16 14:19:48 n2 a1c404a9-51b4-11e7-b057-237cc5970d38
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2017/06/16 14:19:48 n3 a1c404a9-51b4-11e7-b057-237cc5970d38
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">### Nodes ###
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2017/06/16 14:19:48 Total Nodes : 3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2017/06/16 14:19:48 Number of Nodes counts : 3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2017/06/16 14:19:48 Number of Nodes counts : 3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2017/06/16 14:19:48 Number of Nodes counts : 3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">### STATUS ###
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2017/06/16 14:19:48 n1 status : Primary
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2017/06/16 14:19:48 n2 status : Primary
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2017/06/16 14:19:48 n3 status : Primary
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2017/06/16 14:19:48 n1 is ready : [ON]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2017/06/16 14:19:48 n2 is ready : [ON]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2017/06/16 14:19:48 n3 is ready : [ON]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2017/06/16 14:19:48 n1 is connected : [ON]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2017/06/16 14:19:48 n2 is connected : [ON]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2017/06/16 14:19:48 n3 is connected : [ON]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">### Average Replication ###
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2017/06/16 14:19:48 Average on n2 : 0.000000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2017/06/16 14:19:48 Average on n3 : 0.000000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2017/06/16 14:19:48 Average on n1 : 0.100000
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You have to use the &lt;code>slackApp&lt;/code> package in which I placed an exposed function &lt;code>PayloadSlack()&lt;/code> to then customize your alerts.&lt;/p>
&lt;p>The whole output is not displayed in the &lt;strong>STDOUT&lt;/strong> when it is healthy. Nevertheless you just have to uncomment the println in the &lt;code>main.go&lt;/code> to be able to perform your tests.&lt;/p></description></item><item><title>Update Proxmox templates</title><link>https://lebaron.sh/p/update-proxmox-templates/</link><pubDate>Sun, 30 Jul 2017 14:53:16 +0000</pubDate><guid>https://lebaron.sh/p/update-proxmox-templates/</guid><description>&lt;p>To automatically update the list of templates available via prox in your local space just use the following command:&lt;/p>
&lt;pre>&lt;code>pveam update
&lt;/code>&lt;/pre>
&lt;p>I found it good to put it in cron once a week so as not to have too much space for minor versions.&lt;/p></description></item><item><title>Event Watcher Manager Python3</title><link>https://lebaron.sh/p/event-watcher-manager-python3/</link><pubDate>Sun, 30 Jul 2017 12:53:16 +0000</pubDate><guid>https://lebaron.sh/p/event-watcher-manager-python3/</guid><description>&lt;p>On one specific request, I had to work on the elaboration of an automating program reacting on SFTP users updates.&lt;br>
The main technical issue of this request is that the SFTP protocol does not have a logging system.&lt;/p>
&lt;p>I had heard about &lt;a class="link" href="https://github.com/seb-m/pyinotify/blob/master/python3/pyinotify.py" target="_blank" rel="noopener"
>the pyinotify library&lt;/a> so I started working on it.&lt;br>
&lt;strong>The project is presented in its primary mechanism&lt;/strong>, for more details, I invite you to read the sources.&lt;/p>
&lt;h4 id="technical-requests-concerning-the-project">Technical requests concerning the project
&lt;/h4>&lt;p>Details of the context of realization :
&lt;/u>Details of the context of realization :&lt;/u>.&lt;br>
The program must monitor SFTP user actions. These users have their HomeDir which are NFS mounts.&lt;br>
The user can upload anything to his account, but the program must detect video uploads (in some formats) and then perform a series of successive actions.&lt;/p>
&lt;p>&amp;lt;The operation should be as follows:&lt;/u>&lt;br>
For each detected video repository, the video must check the allowed format, then it must be converted to .flv, have metadata, have a scree nshot (video thumbnail) and an email must be sent to the SFTP user&amp;rsquo;s email address.&lt;/p>
&lt;h4 id="preparation">Preparation
&lt;/h4>&lt;p>Several specific details are binding to begin with. The main one being the association of the account user&amp;rsquo;s mail to his own mail with the detection of the video repository.&lt;br>
That&amp;rsquo;s why I chose to start on a static file, knowing in advance the list of users.&lt;/p>
&lt;pre>&lt;code># Création de la classe
class Person:
def __init__(self, name, surname, login, homedir, email, realpath):
self.name = name
self.surname = surname
self.login = login
self.homedir = homedir
self.email = email
self.realpath = realpath
#
# Et instanciation des utilisateurs
#
user_test = Person(
'Test',
'test',
'test',
'/test/test/test.fr',
'test@test.fr',
'/test.fr/')
&lt;/code>&lt;/pre>
&lt;p>Then I worked on the &lt;em>core&lt;/em> of the program. First of all to get the information from my user file and to make a grouping by list.&lt;/p>
&lt;pre>&lt;code># Définition des listes
user_list = []
user_path = []
user_mail = []
user_realpath = []
# On appelle le fichier utilisateur pour implémenter les listes
### LOGIN ###
for users.obj in gc.get_objects():
if isinstance(users.obj, users.Person):
user_list.append(users.obj.login)
### DOCUMENT_ROOT ###
for users.obj in gc.get_objects():
if isinstance(users.obj, users.Person):
user_path.append(users.obj.homedir
### EMAIL ###
for users.obj in gc.get_objects():
if isinstance(users.obj, users.Person):
user_mail.append(users.obj.email)
### REALPATH ###
for users.obj in gc.get_objects():
if isinstance(users.obj, users.Person):
user_realpath.append(users.obj.realpath)
&lt;/code>&lt;/pre>
&lt;p>The definition of a first function whose purpose will be the associative call with an ID position system.&lt;/p>
&lt;pre>&lt;code>def owner_func():
for filename in multiple_file_types('*.avi', '*.mov', '*.mp4', '*.mpg', '*.wmv'):
# On affiche l'utilisateur
owner = pwd.getpwuid(os.stat(filename).st_uid).pw_name
# On vérifie que ce dernier est bien présent dans notr liste
if owner in user_list:
print('The owner of file is : ' + owner)
position = user_list.index(owner)
print('Owner_login_path :' + user_path[position])
mail = user_mail[position]
mailp = print(mail)
realpath = user_realpath[position]
return(realpath)
else:
print('The owner was not found.')
&lt;/code>&lt;/pre>
&lt;h4 id="pyinotifier-introduction">Pyinotifier Introduction
&lt;/h4>&lt;p>Pyinotifier has functions related to the creation and deletion of data (IN_CREATE and IN_DELETE).&lt;br>
Once the basic setup was done, I used the basic definition to implement with the &lt;strong>owner_func()&lt;/strong> function.&lt;/p>
&lt;pre>&lt;code>class EventHandler(pyinotify.ProcessEvent):
def process_IN_CREATE(self, event):
print('\n\n===========================')
print(time.strftime(&amp;quot;%d/%m/%Y %H:%M:%S&amp;quot;))
evp = print('Path complet :' + '\'' + event.pathname + '\'')
evn = print('Objet crée : ' + '\'' + event.name + '\'')
Ouser = event.pathname.split('/')[2]
print('Utilisateur : ' + Ouser)
Oplace = [i for i,x in enumerate(user_list) if x == Ouser][0]
Orelatif = user_realpath[Oplace]
Omail = user_mail[Oplace]
print('Chroot Sftp : ' + Orelatif)
print('Mail : ' + Omail)
command = 'convert.bash '+str(event.pathname)
previous_size=0
upload_finished = False
try:
while True:
time.sleep(1)
size=os.stat(event.pathname).st_size
print(previous_size)
print(size)
if size == previous_size:
break
else:
previous_size = size
except:
return False
print(command)
os.rename(event.pathname, event.pathname.replace(&amp;quot; &amp;quot;, &amp;quot;_&amp;quot;))
neventpathname = event.pathname.replace(' ', '_')
neventname = event.name.replace(' ', '_')
print(neventpathname + neventname)
p1 = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
print('convert.bash', neventpathname)
print(p1.stdout.read())
p1.wait()
p2 = subprocess.Popen(['generatemetadata.bash', neventpathname])
p2.wait()
p3 = subprocess.Popen(['extractpng.sh', neventpathname])
p3.wait()
if neventname.endswith('.html') :
p5 = subprocess.Popen(['mail.bash', Omail, Orelatif, neventpathname])
print('MAIL SENT')
print('===========================')
def process_IN_DELETE(self, event):
print('\n\n===========================')
print(time.strftime(&amp;quot;%d/%m/%Y %H:%M:%S&amp;quot;) + &amp;quot; Deleting:&amp;quot;, event.pathname)
print('===========================')
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Explanations :&lt;/strong>&lt;br>
The principle of Pyinotify is to create an automatic action at a given event. Let&amp;rsquo;s take the deposit of a video corresponding to the right format as the event.&lt;br>
The &lt;strong>IN_CREATE&lt;/strong> function is then triggered and will send us first information including: the creation date, the full path of the event, the relative path (HomeDir of the SFTP user), the user, his email&amp;hellip;&lt;/p>
&lt;p>In a second step we apply the conversion to the right format (with &lt;strong>ffmpeg&lt;/strong>). However, we have to make sure that the video is complete and submitted. This corresponds to the block :&lt;/p>
&lt;pre>&lt;code> command = 'convert.bash '+str(event.pathname)
previous_size=0
upload_finished = False
try:
while True:
time.sleep(1)
size=os.stat(event.pathname).st_size
print(previous_size)
print(size)
if size == previous_size:
break
else:
previous_size = size
except:
return False
print(command)
&lt;/code>&lt;/pre>
&lt;p>Then we will be able to run the bash scripts in subprocess.&lt;/p>
&lt;h4 id="interests">Interests
&lt;/h4>&lt;p>The interests are multiple!&lt;br>
The first one is obvious since it is now possible to perform a logging on a service that was not natively available. The second one is that it is possible to set up a logging and PID system very simply.&lt;/p>
&lt;pre>&lt;code>notifier.loop(daemonize=True, callback=on_loop_func, pid_file='logs/pyinotify.pid', stdout='logs/%s.log' % timestr)
&lt;/code>&lt;/pre>
&lt;p>This opens a very interesting new door on event automation by a Python subroutine that would take the work done by the kernel out of the box.&lt;/p>
&lt;p>I was just thinking of making a kind of API calling this type of operation scalable on different environments.&lt;br>
This project being in my famous &lt;strong>ToDoList&lt;/strong> would be very close to a Master-Slaving system with certainly an imitation of what already exists with Puppet &amp;hellip; but in Python.&lt;/p>
&lt;p>Wait and see what will be done !&lt;/p></description></item><item><title>> whoami</title><link>https://lebaron.sh/about/</link><pubDate>Sun, 30 Jul 2017 11:23:33 +0000</pubDate><guid>https://lebaron.sh/about/</guid><description>&lt;p>I’m systems engineer and acting for opensource digital world, I love technologies, especially when they include environment issues. Digital industry is not the best regarding green impact and behavior, I think it’s my duty to work and carry values of change.&lt;/p>
&lt;p>I have a great interest in cultural things. I like music (classical, jazz, metal), (good &amp;amp; bad) movies, French and international literature.
I look forward to meeting you :)&lt;/p></description></item><item><title/><link>https://lebaron.sh/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lebaron.sh/</guid><description/></item><item><title>CV</title><link>https://lebaron.sh/cv/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lebaron.sh/cv/</guid><description>&lt;p>To use this feature, add &lt;code>links&lt;/code> section to frontmatter.&lt;/p>
&lt;p>This page&amp;rsquo;s frontmatter:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">links&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">title&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">GitHub&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">description&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">GitHub is the world&amp;#39;s largest software development platform.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">website&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://github.com&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">title&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">TypeScript&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">description&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">TypeScript is a typed superset of JavaScript that compiles to plain JavaScript.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">website&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://www.typescriptlang.org&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ts-logo-128.jpg&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>image&lt;/code> field accepts both local and external images.&lt;/p></description></item><item><title>Search</title><link>https://lebaron.sh/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lebaron.sh/search/</guid><description/></item></channel></rss>